WITH 
SAWITH0 AS (select sum(T575361.XLA_GLOBAL_AMOUNT) as c1,
     T785954.COMPANY_SEGMENT_NAME as c3,
     T785971.COST_CENTER_SEGMENT_NAME as c4,
     T10805.JOURNAL_ID_ as c5,
     T10805.VENDOR_ as c6,
     T10805.WORK_ORDER_ as c7,
     T10805.WORK_ORDER_TASK_ as c8,
     T10804.AS8_TRANSACTION_GROUP_ as c9,
     T10804.BANK_ACCOUNT_ as c10,
     T10804.BUDGET_CODE_ as c11,
     T10804.CATALOG_ID_ as c12,
     T10804.CNTRCT_PYNT_THRSTN_ as c13,
     T10804.CUSTOMER_CLASS_ as c14,
     T10804.DATA_ELEMENT_ as c15,
     T10804.INVOICE_ as c16,
     T10804.MTRL_RGST_NBR_ as c17,
     T10804.PRPRTY_NT_T_NT_TSCRPT_ as c18,
     T10804.PYNT_RFRNC_NBR_ as c19,
     T10804.REGULATORY_CODE_ as c20,
     T10804.REPORT_NUMBER_ as c21,
     T10804.SOURCE_PROJECT_ as c22,
     T795020.ACCRUAL_FLAG as c23,
     T795020.APPROVED_BY_NAME as c24,
     T575361.EXPENDITURE_COMMENT as c25,
     T575361.EXPENDITURE_ITEM_DATE as c26,
     case  when T795020.UPLOADED_BY is null then T10804.CREATEDBY else T795020.UPLOADED_BY end  as c27,
     cast(T575361.EXPENDITURE_ITEM_ID as  VARCHAR ( 38 ) ) as c28,
     T6026.EXPENDITURE_TYPE_NAME as c29,
     T3542.FISCAL_DAY_DATE as c30,
     T3542.FISCAL_PERIOD_NAME as c31,
     T6781.CONCAT_SEGMENTS as c32,
     T785958.INTERCOMPANY_SEGMENT_NAME as c33,
     T1487.LEDGER_NAME as c34,
     T5750.NATURAL_ACCOUNT_SEGMENT as c35,
     T575361.ORIGINAL_TRANSACTION_REFERENCE as c36,
     T785967.OWNING_ORG_SEGMENT_NAME as c37,
     T785981.PRODUCT_SEGMENT_NAME as c38,
     T795051.EST_IN_SER_DT as c39,
     T795051.EXECUTIVE_CATEGORY as c40,
     T795051.PROGRAM_NUMBER as c41,
     T795051.PROJECT_MANAGER as c42,
     T795051.PROJECT_NAME as c43,
     T785975.PROJECT_SEGMENT_DESCRIPTION as c44,
     T795051.PROJECT_STATUS as c45,
     T795039.PROJECT_CONSOLIDATED_NAME as c46,
     T785977.REGULATORY_CODE_SEGMENT_NAME as c47,
     T6273.ELEMENT_NUMBER as c49,
     case  when T1487.LEDGER_NAME = 'EXC USD GAAP LEDGER' then T785962.ACCOUNT_SEGMENT_NAME when T1487.LEDGER_NAME = 'EXC USD FERC LEDGER' then T785964.ACCOUNT_SEGMENT_NAME end  as c50,
     T575361.ACCOUNTING_CLASS_CODE as c51,
     T575361.EXPENDITURE_ITEM_ID as c52,
     T575361.TRANSACTION_SOURCE_ID as c53,
     nvl(T10804.BASE_ELEMENT_NAME2_ , T10804.BASE_ELEMENT_NAME_) as c54,
     nvl(T10804.CONTRACT_RELEASE_ , T10804.CONTRACT_RELEASE2_) as c55,
     nvl(T10804.INVC_CNTRCT_NBR_ , T10804.INVC_CNTRCT_NBR2_) as c56,
     nvl(T10804.PAY_DEFINITION2_ , T10804.PAY_DEFINITION_) as c57,
     nvl(T10804.PURCHASE_ORDER_ , T10804.PURCHASE_ORDER2_) as c58,
     nvl(T10804.RESOURCE_TYPE2_ , T10804.RESOURCE_TYPE_) as c59,
     nvl(T10804.REVENUE_DETAIL_ , T10804.REVENUE_DETAIL2_) as c60,
     nvl(T10804.WRCR_CTGRY_R_NPLY_CL2_ , T10804.WRCR_CTGRY_R_NPLY_CL_) as c61,
     T3542.FISCAL_PERIOD_SORT_KEY as c62,
     T1487.LEDGER_ID as c63,
     T5750.NTRL_ACNT_SGMNT_VALUESET_CODE as c64,
     T3542.FISCAL_PERIOD_SET_NAME as c65,
     T6025.EXPENDITURE_TYPE_ID as c66,
     T785958.HIERARCHY_VALUESET_CODE as c67,
     T785958.INTERCOMPANY_SEGMENT as c68,
     T785971.COST_CENTER_SEGMENT as c69,
     T785971.HIERARCHY_VALUESET_CODE as c70,
     T785977.REGULATORY_CODE_SEGMENT as c71,
     T785977.HIERARCHY_VALUESET_CODE as c72,
     T785954.COMPANY_SEGMENT as c73,
     T785954.HIERARCHY_VALUESET_CODE as c74,
     T785967.HIERARCHY_VALUESET_CODE as c75,
     T785967.OWNING_ORG_SEGMENT as c76,
     T785981.PRODUCT_SEGMENT as c77,
     T785981.HIERARCHY_VALUESET_CODE as c78,
     case  when T575361.ACCOUNTING_CLASS_CODE = 'BURDENED_DR' then 'BURDENED_COST' when T575361.ACCOUNTING_CLASS_CODE = 'BURDENED_CR' then 'BURDENED_COST_CLEARING' when T575361.ACCOUNTING_CLASS_CODE = 'BURDEN_DR' then 'BURDEN_COST' when T575361.ACCOUNTING_CLASS_CODE = 'BURDEN_CR' then 'BURDEN_COST_CLEARING' when T575361.ACCOUNTING_CLASS_CODE = 'RAW_DR' then 'RAW_COST' when T575361.ACCOUNTING_CLASS_CODE = 'RAW_CR' then 'RAW_COST_CLEARING' else T575361.ACCOUNTING_CLASS_CODE end  as c80,
     cast(T575361.TRANSACTION_SOURCE_ID as  VARCHAR ( 38 ) ) as c82
from 
     (
          (
               (
                    (
                         (
                              (
                                   (
                                        (
                                             (
                                                  EFS_DATA_LAYER.EFS_PPM_PROJECT_CURRENT_DIM T795039 /* Project_Dim_DW_PROJECTS_D_TL_Dim_EFS_PPM_PROJECT_CURRENT_DIM_extendDim */  inner join (
                                                       (
                                                            OAX$OAC.DW_PROJECT_ELEMENT_D T6273 /* Dim_DW_PROJECT_ELEMENT_D */  inner join (
                                                                 OAX$OAC.DW_GL_CODE_COMBINATION_D T6781 /* Dim_DW_GL_CODE_COMBINATION_D */  inner join (
                                                                      OAX$OAC.DW_NATURAL_ACCOUNT_D T5750 /* Dim_DW_NATURAL_ACCOUNT_D_Base */  inner join (
                                                                           OAX$OAC.DW_LEDGER_D T1487 /* Dim_DW_LEDGER_D */  inner join (
                                                                                OAX$OAC.DW_FISCAL_DAY_D T3542 /* Dim_DW_FISCAL_DAY_D */  inner join (
                                                                                     OAX$OAC.DW_PROJECT_D T3792 /* Dim_DW_PROJECT_D */  inner join (
                                                                                          (
                                                                                               OAX$OAC.DW_PROJECT_EXPENDITURE_TYPE_D T6025 /* Dim_DW_PROJECT_EXPENDITURE_TYPE_D */  left outer join OAX$OAC.DW_PROJECT_EXPENDITURE_TYPE_D_TL T6026 /* Dim_DW_PROJECT_EXPENDITURE_TYPE_D_TL */  On T6025.EXPENDITURE_TYPE_ID = T6026.EXPENDITURE_TYPE_ID and T6026.LANGUAGE = 'US') inner join (
                                                                                               (
                                                                                                    OAX$OAC.DW_PROJECT_SLA_COST_CF_SEC T575361 /* Fact_DW_PROJECT_SLA_COST_CF */  left outer join OAX$OAC.DW_PJC_EXP_ITEMS_ALL_DFF T10804 /* Desc_Flex_Fact_DW_PROJECT_SLA_COST_CF_DW_PJC_EXP_ITEMS_ALL_DFF */  On T10804.S_K_5000 = T575361.EXPENDITURE_ITEM_ID) left outer join OAX$OAC.DW_PROJECTS_STD_COST_COLLECTION_DFF T10805 /* Desc_Flex_Fact_DW_PROJECT_SLA_COST_CF_DW_PROJECTS_STD_COST_COLLECTION_DFF */  On T10805.S_K_5000 = T575361.EXPENDITURE_ITEM_ID) On T6025.EXPENDITURE_TYPE_ID = T575361.EXPENDITURE_TYPE_ID) On T3792.PROJECT_ID = T575361.PROJECT_ID) On T3542.FISCAL_DAY_DATE = T575361.XLA_ACCOUNTING_DATE and T3542.FISCAL_PERIOD_SET_NAME = T575361.FISCAL_PERIOD_SET_NAME and T3542.FISCAL_PERIOD_TYPE = T575361.FISCAL_PERIOD_TYPE and T3542.ADJUSTMENT_PERIOD_FLAG in ('N', '~NOVALUE~')) On T1487.LEDGER_ID = T575361.XLA_LEDGER_ID) On T5750.NTRL_ACNT_SGMNT_VALUESET_CODE = T575361.NTRL_ACNT_SGMNT_VALUESET_CODE and T5750.NATURAL_ACCOUNT_SEGMENT = T575361.NATURAL_ACCOUNT_SEGMENT) On T6781.CODE_COMBINATION_ID = T575361.GL_CODE_COMBINATION_ID) On T6273.PROJ_ELEMENT_ID = T575361.TASK_ID) inner join (
                                                            
                                                                 OAX$OAC.DW_PROJECT_COST_CF_SEC T575363 /* Dim_DW_PROJECT_COST_CF */  left outer join EFS_DATA_LAYER.EFS_PPM_EXP_ITEM_EXT_DIM T795020 /* Project_Costing_Details_Dim_DW_PROJECT_COST_CF_Dim_EFS_PPM_EXP_ITEM_EXT_DIM_extendDim */  On T575363.EXPENDITURE_ITEM_ID = T795020.EXPENDITURE_ITEM_ID) On T575361.LINE_NUM = T575363.LINE_NUM and T575361.EXPENDITURE_ITEM_ID = T575363.EXPENDITURE_ITEM_ID) On T3792.PROJECT_ID = T795039.PROJECT_ID) left outer join 
                                                  EFS_DATA_LAYER.EFS_OWNING_ORG_CURRENT_V T785967 /* Dim_Owning_Org_Current_Dim_EFS_OWNING_ORG_CURRENT_V_customDim */  On T575361.GL_SEGMENT4 = T785967.OWNING_ORG_SEGMENT and T575361.GL_SEGMENT4_VALUESET_CODE = T785967.HIERARCHY_VALUESET_CODE) left outer join (
                                             EFS_DATA_LAYER.EFS_PROJECT_DIMH T785975 /* Dim_Project_Alternate_Dim_EFS_PROJECT_DIMH_customDim */  left outer join EFS_DATA_LAYER.EFS_PPM_PROJECT_CURRENT_DIM T795051 /* Project_Alternate_Dim_Project_Alternate_Dim_EFS_PROJECT_DIMH_customDim_Dim_EFS_PPM_PROJECT_CURRENT_DIM_extendDim */  On T785975.PROJECT_SEGMENT = T795051.PROJECT_NUMBER) On T575361.GL_SEGMENT6_VALUESET_CODE = T785975.HIERARCHY_VALUESET_CODE and T575361.GL_SEGMENT6 = T785975.PROJECT_SEGMENT) left outer join 
                                        EFS_DATA_LAYER.EFS_PRODUCT_CURRENT_V T785981 /* Dim_Product_Current_Dim_EFS_PRODUCT_CURRENT_V_customDim */  On T575361.GL_SEGMENT8 = T785981.PRODUCT_SEGMENT and T575361.GL_SEGMENT8_VALUESET_CODE = T785981.HIERARCHY_VALUESET_CODE) left outer join 
                                   EFS_DATA_LAYER.EFS_BALANCE_SEGMENT_CURRENT_V T785954 /* Dim_Balance_Segment_Current_Dim_EFS_BALANCE_SEGMENT_CURRENT_V_customDim */  On T575361.GL_BLNC_SGMNT_VALUESET_CODE = T785954.HIERARCHY_VALUESET_CODE and T575361.GL_BALANCING_SEGMENT = T785954.COMPANY_SEGMENT) left outer join 
                              EFS_DATA_LAYER.EFS_NATURAL_ACCOUNT_GAAP_CURRENT_V T785962 /* Dim_Natural_Account_GAAP_Current_Dim_EFS_NATURAL_ACCOUNT_GAAP_CURRENT_V_customDim */  On T575361.NATURAL_ACCOUNT_SEGMENT = T785962.ACCOUNT_SEGMENT and T575361.NTRL_ACNT_SGMNT_VALUESET_CODE = T785962.HIERARCHY_VALUESET_CODE) left outer join 
                         EFS_DATA_LAYER.EFS_INTERCOMPANY_CURRENT_V T785958 /* Dim_Intercompany_Current_Dim_EFS_INTERCOMPANY_CURRENT_V_customDim */  On T575361.GL_SEGMENT2_VALUESET_CODE = T785958.HIERARCHY_VALUESET_CODE and T575361.GL_SEGMENT2 = T785958.INTERCOMPANY_SEGMENT) left outer join 
                    EFS_DATA_LAYER.EFS_NATURAL_ACCOUNT_FERC_CURRENT_V T785964 /* Dim_Natural_Account_FERC_Current_Dim_EFS_NATURAL_ACCOUNT_FERC_CURRENT_V_customDim */  On T575361.NATURAL_ACCOUNT_SEGMENT = T785964.ACCOUNT_SEGMENT and T575361.NTRL_ACNT_SGMNT_VALUESET_CODE = T785964.HIERARCHY_VALUESET_CODE) left outer join 
               EFS_DATA_LAYER.EFS_COST_CENTER_CURRENT_V T785971 /* Dim_Cost_Center_Current_Dim_EFS_COST_CENTER_CURRENT_V_customDim */  On T575361.COST_CENTER_VALUESET_CODE = T785971.HIERARCHY_VALUESET_CODE and T575361.COST_CENTER_SEGMENT = T785971.COST_CENTER_SEGMENT) left outer join 
          EFS_DATA_LAYER.EFS_REGULATORY_CODE_CURRENT_V T785977 /* Dim_Regulatory_Code_Current_Dim_EFS_REGULATORY_CODE_CURRENT_V_customDim */  On T575361.GL_SEGMENT7 = T785977.REGULATORY_CODE_SEGMENT and T575361.GL_SEGMENT7_VALUESET_CODE = T785977.HIERARCHY_VALUESET_CODE
where  ( T1487.LEDGER_NAME = 'EXC USD GAAP LEDGER' and T3542.FISCAL_PERIOD_NAME = 'May-25' and T3542.FISCAL_YEAR_NUMBER = 2025 and T785954.COMPANY_SEGMENT_NAME = '10003~BSC' ) 
group by T1487.LEDGER_NAME, T1487.LEDGER_ID, T3542.FISCAL_PERIOD_SORT_KEY, T3542.ADJUSTMENT_PERIOD_FLAG, T3542.FISCAL_DAY_DATE, T3542.FISCAL_PERIOD_NAME, T3542.FISCAL_PERIOD_SET_NAME, T5750.NTRL_ACNT_SGMNT_VALUESET_CODE, T5750.NATURAL_ACCOUNT_SEGMENT, T6025.EXPENDITURE_TYPE_ID, T6026.EXPENDITURE_TYPE_NAME, T6273.ELEMENT_NUMBER, T6781.CONCAT_SEGMENTS, T10804.AS8_TRANSACTION_GROUP_, T10804.BANK_ACCOUNT_, T10804.BUDGET_CODE_, T10804.CATALOG_ID_, T10804.CNTRCT_PYNT_THRSTN_, T10804.CUSTOMER_CLASS_, T10804.DATA_ELEMENT_, T10804.INVOICE_, T10804.MTRL_RGST_NBR_, T10804.PRPRTY_NT_T_NT_TSCRPT_, T10804.PYNT_RFRNC_NBR_, T10804.REGULATORY_CODE_, T10804.REPORT_NUMBER_, T10804.SOURCE_PROJECT_, T10805.JOURNAL_ID_, T10805.VENDOR_, T10805.WORK_ORDER_, T10805.WORK_ORDER_TASK_, T575361.TRANSACTION_SOURCE_ID, T575361.ORIGINAL_TRANSACTION_REFERENCE, T575361.ACCOUNTING_CLASS_CODE, T575361.EXPENDITURE_ITEM_DATE, T575361.EXPENDITURE_COMMENT, T575361.EXPENDITURE_ITEM_ID, T785954.COMPANY_SEGMENT, T785954.COMPANY_SEGMENT_NAME, T785954.HIERARCHY_VALUESET_CODE, T785958.HIERARCHY_VALUESET_CODE, T785958.INTERCOMPANY_SEGMENT_NAME, T785958.INTERCOMPANY_SEGMENT, T785967.HIERARCHY_VALUESET_CODE, T785967.OWNING_ORG_SEGMENT, T785967.OWNING_ORG_SEGMENT_NAME, T785971.COST_CENTER_SEGMENT, T785971.HIERARCHY_VALUESET_CODE, T785971.COST_CENTER_SEGMENT_NAME, T785975.PROJECT_SEGMENT_DESCRIPTION, T785977.REGULATORY_CODE_SEGMENT_NAME, T785977.REGULATORY_CODE_SEGMENT, T785977.HIERARCHY_VALUESET_CODE, T785981.PRODUCT_SEGMENT, T785981.PRODUCT_SEGMENT_NAME, T785981.HIERARCHY_VALUESET_CODE, T795020.APPROVED_BY_NAME, T795020.ACCRUAL_FLAG, T795039.PROJECT_CONSOLIDATED_NAME, T795051.PROJECT_NAME, T795051.EST_IN_SER_DT, T795051.PROJECT_STATUS, T795051.PROGRAM_NUMBER, T795051.PROJECT_MANAGER, T795051.EXECUTIVE_CATEGORY, case  when T1487.LEDGER_NAME = 'EXC USD GAAP LEDGER' then T785962.ACCOUNT_SEGMENT_NAME when T1487.LEDGER_NAME = 'EXC USD FERC LEDGER' then T785964.ACCOUNT_SEGMENT_NAME end , case  when T795020.UPLOADED_BY is null then T10804.CREATEDBY else T795020.UPLOADED_BY end , nvl(T10804.BASE_ELEMENT_NAME2_ , T10804.BASE_ELEMENT_NAME_), nvl(T10804.CONTRACT_RELEASE_ , T10804.CONTRACT_RELEASE2_), nvl(T10804.INVC_CNTRCT_NBR_ , T10804.INVC_CNTRCT_NBR2_), nvl(T10804.PAY_DEFINITION2_ , T10804.PAY_DEFINITION_), nvl(T10804.PURCHASE_ORDER_ , T10804.PURCHASE_ORDER2_), nvl(T10804.RESOURCE_TYPE2_ , T10804.RESOURCE_TYPE_), nvl(T10804.REVENUE_DETAIL_ , T10804.REVENUE_DETAIL2_), nvl(T10804.WRCR_CTGRY_R_NPLY_CL2_ , T10804.WRCR_CTGRY_R_NPLY_CL_)),
SAWITH1 AS (select  /*+ no_merge */  T4676.ACCOUNTING_CLASS_NAME as c1,
     T4676.ACCOUNTING_CLASS_CODE as c2
from 
     OAX$OAC.DW_XLA_ACCOUNT_CLASS_LKP_TL T4676 /* Lookup_DW_XLA_ACCOUNT_CLASS_LKP_TL */ 
where  ( T4676.LANGUAGE = 'US' ) ),
SAWITH2 AS (select  /*+ no_merge */  T6610.USER_TRANSACTION_SOURCE as c1,
     T6610.TRANSACTION_SOURCE_ID as c2
from 
     OAX$OAC.DW_PROJECT_TXN_SOURCE_TL T6610 /* Lookup_DW_PROJECT_TXN_SOURCE_TL */ 
where  ( T6610.LANGUAGE = 'US' ) ),
SAWITH3 AS (select D1.c1 as c1,
     D1.c2 as c2,
     D1.c3 as c3,
     D1.c4 as c4,
     D1.c5 as c5,
     D1.c6 as c6,
     D1.c7 as c7,
     D1.c8 as c8,
     D1.c9 as c9,
     D1.c10 as c10,
     D1.c11 as c11,
     D1.c12 as c12,
     D1.c13 as c13,
     D1.c14 as c14,
     D1.c15 as c15,
     D1.c16 as c16,
     D1.c17 as c17,
     D1.c18 as c18,
     D1.c19 as c19,
     D1.c20 as c20,
     D1.c21 as c21,
     D1.c22 as c22,
     D1.c23 as c23,
     D1.c24 as c24,
     D1.c25 as c25,
     D1.c26 as c26,
     D1.c27 as c27,
     D1.c28 as c28,
     D1.c29 as c29,
     D1.c30 as c30,
     D1.c31 as c31,
     D1.c32 as c32,
     D1.c33 as c33,
     D1.c34 as c34,
     D1.c35 as c35,
     D1.c36 as c36,
     D1.c37 as c37,
     D1.c38 as c38,
     D1.c39 as c39,
     D1.c40 as c40,
     D1.c41 as c41,
     D1.c42 as c42,
     D1.c43 as c43,
     D1.c44 as c44,
     D1.c45 as c45,
     D1.c46 as c46,
     D1.c47 as c47,
     D1.c48 as c48,
     D1.c49 as c49,
     D1.c50 as c50,
     D1.c51 as c51,
     D1.c52 as c52,
     D1.c53 as c53,
     D1.c54 as c54,
     D1.c55 as c55,
     D1.c56 as c56,
     D1.c57 as c57,
     D1.c58 as c58,
     D1.c59 as c59,
     D1.c60 as c60,
     D1.c61 as c61,
     D1.c62 as c62,
     D1.c63 as c63,
     D1.c64 as c64,
     D1.c65 as c65,
     D1.c66 as c66,
     D1.c67 as c67,
     D1.c68 as c68,
     D1.c69 as c69,
     D1.c70 as c70,
     D1.c71 as c71,
     D1.c72 as c72,
     D1.c73 as c73,
     D1.c74 as c74,
     D1.c75 as c75,
     D1.c76 as c76,
     D1.c77 as c77,
     D1.c78 as c78,
     D1.c79 as c79
from 
     (select D1.c1 as c1,
               nvl(D2.c1 , D1.c51) as c2,
               D1.c3 as c3,
               D1.c4 as c4,
               D1.c5 as c5,
               D1.c6 as c6,
               D1.c7 as c7,
               D1.c8 as c8,
               D1.c9 as c9,
               D1.c10 as c10,
               D1.c11 as c11,
               D1.c12 as c12,
               D1.c13 as c13,
               D1.c14 as c14,
               D1.c15 as c15,
               D1.c16 as c16,
               D1.c17 as c17,
               D1.c18 as c18,
               D1.c19 as c19,
               D1.c20 as c20,
               D1.c21 as c21,
               D1.c22 as c22,
               D1.c23 as c23,
               D1.c24 as c24,
               D1.c25 as c25,
               D1.c26 as c26,
               D1.c27 as c27,
               D1.c28 as c28,
               D1.c29 as c29,
               D1.c30 as c30,
               D1.c31 as c31,
               D1.c32 as c32,
               D1.c33 as c33,
               D1.c34 as c34,
               D1.c35 as c35,
               D1.c36 as c36,
               D1.c37 as c37,
               D1.c38 as c38,
               D1.c39 as c39,
               D1.c40 as c40,
               D1.c41 as c41,
               D1.c42 as c42,
               D1.c43 as c43,
               D1.c44 as c44,
               D1.c45 as c45,
               D1.c46 as c46,
               D1.c47 as c47,
               nvl(D3.c1 , D1.c82) as c48,
               D1.c49 as c49,
               D1.c50 as c50,
               D1.c51 as c51,
               D1.c52 as c52,
               D1.c53 as c53,
               D1.c54 as c54,
               D1.c55 as c55,
               D1.c56 as c56,
               D1.c57 as c57,
               D1.c58 as c58,
               D1.c59 as c59,
               D1.c60 as c60,
               D1.c61 as c61,
               D1.c62 as c62,
               D1.c63 as c63,
               D1.c64 as c64,
               D1.c65 as c65,
               D1.c66 as c66,
               D1.c67 as c67,
               D1.c68 as c68,
               D1.c69 as c69,
               D1.c70 as c70,
               D1.c71 as c71,
               D1.c72 as c72,
               D1.c73 as c73,
               D1.c74 as c74,
               D1.c75 as c75,
               D1.c76 as c76,
               D1.c77 as c77,
               D1.c78 as c78,
               D1.c80 as c79,
               ROW_NUMBER() OVER (PARTITION BY D1.c3, D1.c4, D1.c5, D1.c6, D1.c7, D1.c8, D1.c9, D1.c10, D1.c11, D1.c12, D1.c13, D1.c14, D1.c15, D1.c16, D1.c17, D1.c18, D1.c19, D1.c20, D1.c21, D1.c22, D1.c23, D1.c24, D1.c25, D1.c26, D1.c27, D1.c28, D1.c29, D1.c30, D1.c31, D1.c32, D1.c33, D1.c34, D1.c35, D1.c36, D1.c37, D1.c38, D1.c39, D1.c40, D1.c41, D1.c42, D1.c43, D1.c44, D1.c45, D1.c46, D1.c47, D1.c49, D1.c50, D1.c51, D1.c52, D1.c53, D1.c54, D1.c55, D1.c56, D1.c57, D1.c58, D1.c59, D1.c60, D1.c61, D1.c62, D1.c63, D1.c64, D1.c65, D1.c66, D1.c67, D1.c68, D1.c69, D1.c70, D1.c71, D1.c72, D1.c73, D1.c74, D1.c75, D1.c76, D1.c77, D1.c78, D1.c80 ORDER BY D1.c3 ASC, D1.c4 ASC, D1.c5 ASC, D1.c6 ASC, D1.c7 ASC, D1.c8 ASC, D1.c9 ASC, D1.c10 ASC, D1.c11 ASC, D1.c12 ASC, D1.c13 ASC, D1.c14 ASC, D1.c15 ASC, D1.c16 ASC, D1.c17 ASC, D1.c18 ASC, D1.c19 ASC, D1.c20 ASC, D1.c21 ASC, D1.c22 ASC, D1.c23 ASC, D1.c24 ASC, D1.c25 ASC, D1.c26 ASC, D1.c27 ASC, D1.c28 ASC, D1.c29 ASC, D1.c30 ASC, D1.c31 ASC, D1.c32 ASC, D1.c33 ASC, D1.c34 ASC, D1.c35 ASC, D1.c36 ASC, D1.c37 ASC, D1.c38 ASC, D1.c39 ASC, D1.c40 ASC, D1.c41 ASC, D1.c42 ASC, D1.c43 ASC, D1.c44 ASC, D1.c45 ASC, D1.c46 ASC, D1.c47 ASC, D1.c49 ASC, D1.c50 ASC, D1.c51 ASC, D1.c52 ASC, D1.c53 ASC, D1.c54 ASC, D1.c55 ASC, D1.c56 ASC, D1.c57 ASC, D1.c58 ASC, D1.c59 ASC, D1.c60 ASC, D1.c61 ASC, D1.c62 ASC, D1.c63 ASC, D1.c64 ASC, D1.c65 ASC, D1.c66 ASC, D1.c67 ASC, D1.c68 ASC, D1.c69 ASC, D1.c70 ASC, D1.c71 ASC, D1.c72 ASC, D1.c73 ASC, D1.c74 ASC, D1.c75 ASC, D1.c76 ASC, D1.c77 ASC, D1.c78 ASC, D1.c80 ASC) as c80
          from 
               (
                    SAWITH0 D1 left outer join SAWITH1 D2 On D1.c80 = D2.c2) left outer join SAWITH2 D3 On  SYS_OP_MAP_NONNULL(D1.c53) = SYS_OP_MAP_NONNULL(D3.c2) 
          where  ( nvl(D2.c1 , D1.c51) is not null ) 
     ) D1
where  ( D1.c80 = 1 ) ),
SAWITH4 AS (select 0 as c1,
     D1.c2 as c2,
     D1.c3 as c3,
     D1.c4 as c4,
     D1.c5 as c5,
     D1.c6 as c6,
     D1.c7 as c7,
     D1.c8 as c8,
     D1.c9 as c9,
     D1.c10 as c10,
     D1.c11 as c11,
     D1.c12 as c12,
     D1.c13 as c13,
     D1.c14 as c14,
     D1.c15 as c15,
     D1.c16 as c16,
     D1.c17 as c17,
     D1.c18 as c18,
     D1.c19 as c19,
     D1.c20 as c20,
     D1.c21 as c21,
     D1.c22 as c22,
     D1.c23 as c23,
     D1.c24 as c24,
     D1.c25 as c25,
     D1.c26 as c26,
     D1.c27 as c27,
     D1.c28 as c28,
     D1.c29 as c29,
     D1.c30 as c30,
     D1.c31 as c31,
     D1.c32 as c32,
     D1.c33 as c33,
     D1.c34 as c34,
     D1.c35 as c35,
     D1.c36 as c36,
     D1.c37 as c37,
     D1.c38 as c38,
     D1.c39 as c39,
     D1.c40 as c40,
     D1.c41 as c41,
     D1.c42 as c42,
     D1.c43 as c43,
     D1.c44 as c44,
     D1.c45 as c45,
     D1.c46 as c46,
     D1.c47 as c47,
     D1.c48 as c48,
     D1.c49 as c49,
     D1.c50 as c50,
     D1.c51 as c51,
     D1.c52 as c52,
     D1.c53 as c53,
     D1.c54 as c54,
     D1.c55 as c55,
     D1.c56 as c56,
     D1.c57 as c57,
     D1.c58 as c58,
     D1.c59 as c59,
     D1.c60 as c60,
     D1.c61 as c61,
     D1.c62 as c62,
     D1.c1 as c63,
     0 as c64,
     0 as c65,
     0 as c66,
     D1.c63 as c67,
     D1.c64 as c68,
     D1.c65 as c69,
     D1.c66 as c70,
     D1.c67 as c71,
     D1.c68 as c72,
     D1.c69 as c73,
     D1.c70 as c74,
     D1.c71 as c75,
     D1.c72 as c76,
     D1.c73 as c77,
     D1.c74 as c78,
     D1.c75 as c79,
     D1.c76 as c80,
     D1.c77 as c81,
     D1.c78 as c82,
     D1.c79 as c83
from 
     SAWITH3 D1)
select D1.c1 as c1,
     D1.c2 as c2,
     D1.c3 as c3,
     D1.c4 as c4,
     D1.c5 as c5,
     D1.c6 as c6,
     D1.c7 as c7,
     D1.c8 as c8,
     D1.c9 as c9,
     D1.c10 as c10,
     D1.c11 as c11,
     D1.c12 as c12,
     D1.c13 as c13,
     D1.c14 as c14,
     D1.c15 as c15,
     D1.c16 as c16,
     D1.c17 as c17,
     D1.c18 as c18,
     D1.c19 as c19,
     D1.c20 as c20,
     D1.c21 as c21,
     D1.c22 as c22,
     D1.c23 as c23,
     D1.c24 as c24,
     D1.c25 as c25,
     D1.c26 as c26,
     D1.c27 as c27,
     D1.c28 as c28,
     D1.c29 as c29,
     D1.c30 as c30,
     D1.c31 as c31,
     D1.c32 as c32,
     D1.c33 as c33,
     D1.c34 as c34,
     D1.c35 as c35,
     D1.c36 as c36,
     D1.c37 as c37,
     D1.c38 as c38,
     D1.c39 as c39,
     D1.c40 as c40,
     D1.c41 as c41,
     D1.c42 as c42,
     D1.c43 as c43,
     D1.c44 as c44,
     D1.c45 as c45,
     D1.c46 as c46,
     D1.c47 as c47,
     D1.c48 as c48,
     D1.c49 as c49,
     D1.c50 as c50,
     D1.c51 as c51,
     D1.c52 as c52,
     D1.c53 as c53,
     D1.c54 as c54,
     D1.c55 as c55,
     D1.c56 as c56,
     D1.c57 as c57,
     D1.c58 as c58,
     D1.c59 as c59,
     D1.c60 as c60,
     D1.c61 as c61,
     D1.c62 as c62,
     D1.c63 as c63,
     D1.c64 as c64,
     D1.c65 as c65,
     D1.c66 as c66,
     D1.c67 as c67,
     D1.c68 as c68,
     D1.c69 as c69,
     D1.c70 as c70,
     D1.c71 as c71,
     D1.c72 as c72,
     D1.c73 as c73,
     D1.c74 as c74,
     D1.c75 as c75,
     D1.c76 as c76,
     D1.c77 as c77,
     D1.c78 as c78,
     D1.c79 as c79,
     D1.c80 as c80,
     D1.c81 as c81,
     D1.c82 as c82
from 
     SAWITH4 D1
order by c44, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c45, c46, c47, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c68, c28, c48, c67, c69, c62, c70, c2, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c43;

==================================================
CIHOME=/usr/bin
 
SBUCKET=$1
 
DBUCKET=$2
 
NAMESPACE=$3
 
YEAR=$(date | awk '{print $6}')
 
MONTH=$(date | awk '{print $2}')
 
DAY=$(date | awk '{print $3}')
 
TIME=$(date | awk '{print $4" "$5}'| sed 's/:/-/g')
 
 
# object store list to find the file
 
cd $OCIHOME
 
oci os object list --bucket-name $SBUCKET --auth instance_principal --all | grep name | awk '{ print $2 }' | sed 's/"//g' | sed 's/,//g' > /tmp/efs_oos_copy_file.list
 
# copy file to Archive Bucket
 
     for filename in `cat /tmp/efs_oos_copy_file.list`
 
        do oci os object copy --bucket-name $SBUCKET --source-object-name $filename --destination-namespace $NAMESPACE --destination-bucket $DBUCKET --destination-object-name "$YEAR/$MONTH/$DAY/$TIME/$filename" --auth instance_principal
 
        #do echo "$filename"
 
        done
 
# delete file from ODI Bucket
echo "del -"
echo "$1"
echo "EFS_BICC_ODI_DEV01_BKT"
if ["$SBUCKET" == "EFS_BICC_ODI_DEV01_BKT"]
then
        echo "if loop"
        oci os object bulk-delete --namespace "$NAMESPACE" --bucket-name "$SBUCKET" --auth instance_principal --force
else
        for filename in $(cat /tmp/efs_oos_copy_file.list); do
                if echo "$filename" | grep -qE '[0-9]{4}\.csv$'; then
                        oci os object delete --namespace "$NAMESPACE" --bucket-name "$SBUCKET" --name "$filename" --auth instance_principal --force
                fi
        done
fi





https://talentondemand.deloittenet.deloitte.com/#!/
https://staffit.deloitteresources.com/WebUI/UserValidation?gw-client=200#/dashboard
https://dte.deloitte.com/TE/ExpenseSummary.aspx

------------------- Change from previous query ---------
-- Union 1: a.	FERC data should be driving. So, please use outer-join.  
-- Union 3 – FERC data (FERC only and GAAP tied data)
-- Only distinct Journal Name between union
-- Used PARENT_JE_HEADER_ID in union 2 to get the FERC side.
-- Added Segment6 as project_code
-- Added filter on status = posted
-- Removed PJC tables and replaced Transaction id with XDA column.
------------------------------------------------------------

SELECT 
  which, 
  concat(nvl(concat('GAAP: ',GAAP_PROJECT),''),
  nvl(concat('  FERC: ',FERC_PROJECT),''))as Project_Code,
  TRANSACTION_IDG, 
  nvl(Journal_name, ferc) as Journal_name, 
  source,
    GAAP_COMPANY,
    GAAP_INTERCOMPANY,
    GAAP_ACCOUNT, 
	GAAP_OWNING_ORG,
	GAAP_COST_CENTER,
	GAAP_PROJECT,
	GAAP_REGULATORY_CODE,
	GAAP_PRODUCT,
	GAAP_FUTURE1,
    GAAP_FUTURE2,
    FERC_COMPANY,
    FERC_INTERCOMPANY,
    FERC_ACCOUNT, 
	FERC_OWNING_ORG,
	FERC_COST_CENTER,
	FERC_PROJECT,
	FERC_REGULATORY_CODE,
	FERC_PRODUCT,
  FERC_FUTURE1,
  FERC_FUTURE2,
  GAAP_ACCOUNT, 
  FERC_ACCOUNT, 
  GAAP_CREDIT, 
  GAAP_DEBITS, 
  FERC_CREDIT, 
  FERC_DEBITS,
  GAAP_CCID,
  GAAP_POSTED_DATE,
  GAAP_PERIOD_NAME,
  FERC_CCID,
  FERC_POSTED_DATE,
  FERC_PERIOD_NAME,
  gaap_event_id,
  gaap_line_num,
  ferc_event_id,
  ferc_line_num
from 
  (
    SELECT 
      'FERC at PPM(Transaction)' as which,
      GAAP_DATA.TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc, 
      nvl(GAAP_DATA.source, FERC_DATA.source) as source,
      GAAP_DATA.COMPANY	As GAAP_COMPANY,
      GAAP_DATA.INTERCOMPANY as GAAP_INTERCOMPANY,
      GAAP_DATA.GAAP_ACCOUNT as GAAP_ACCOUNT, 
	  GAAP_DATA.OWNING_ORG as GAAP_OWNING_ORG,
	  GAAP_DATA.COST_CENTER as	GAAP_COST_CENTER,
	  GAAP_DATA.PROJECT as GAAP_PROJECT,
	  GAAP_DATA.REGULATORY_CODE as GAAP_REGULATORY_CODE,
	  GAAP_DATA.PRODUCT as GAAP_PRODUCT,
	  GAAP_DATA.FUTURE1 as GAAP_FUTURE1,
	  GAAP_DATA.FUTURE2 as GAAP_FUTURE2,
      FERC_DATA.COMPANY	As FERC_COMPANY,
      FERC_DATA.INTERCOMPANY as FERC_INTERCOMPANY,
      FERC_DATA.FERC_ACCOUNT as FERC_ACCOUNT, 
	  FERC_DATA.OWNING_ORG as FERC_OWNING_ORG,
	  FERC_DATA.COST_CENTER as	FERC_COST_CENTER,
	  FERC_DATA.PROJECT as FERC_PROJECT,
	  FERC_DATA.REGULATORY_CODE as FERC_REGULATORY_CODE,
	  FERC_DATA.PRODUCT as FERC_PRODUCT,
	  FERC_DATA.FUTURE1 as FERC_FUTURE1,
	  FERC_DATA.FUTURE2 as FERC_FUTURE2,
      GAAP_DATA.code_combination_id as GAAP_CCID,
      GAAP_DATA.posted_date as GAAP_POSTED_DATE,
      GAAP_DATA.period_name as GAAP_PERIOD_NAME,
      FERC_DATA.code_combination_id as FERC_CCID,
      FERC_DATA.posted_date as FERC_POSTED_DATE,
      FERC_DATA.period_name as FERC_PERIOD_NAME,
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      GAAP_DATA.event_id as gaap_event_id,
      GAAP_DATA.ae_line_num as gaap_line_num,
      GAAP_DATA.event_id as ferc_event_id,
      FERC_DATA.ae_line_num as ferc_line_num,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status
    FROM 
      (
        SELECT 
          xda.source_distribution_id_num_1 AS TRANSACTION_IDG, 
          gcc.SEGMENT1	As COMPANY,
          gcc.SEGMENT2 as INTERCOMPANY,
          gcc.segment3 AS GAAP_ACCOUNT, 
			gcc.SEGMENT4 as OWNING_ORG,
			gcc.SEGMENT5 as	COST_CENTER,
			gcc.SEGMENT6 as PROJECT,
			gcc.SEGMENT7 as REGULATORY_CODE,
			gcc.SEGMENT8 as PRODUCT,
			gcc.SEGMENT9 as FUTURE1,
			gcc.SEGMENT10 as FUTURE2,
          c.accounted_cr AS GAAP_CREDIT, 
          c.accounted_dr AS GAAP_DEBITS, 
          xda.event_id as event_id, 
          xda.ae_line_num as ae_line_num, 
          gcc.code_combination_id,
            b.posted_date as posted_date,
            b.period_name as period_name,
          B.name as Journal_name,
          b.je_source as source,
          c.status as line_status,
          b.status as header_status  
        FROM 
          xla_distribution_links XDA, 
          xla_ae_lines XAL, 
          gl_code_combinations gcc, 
          gl_import_references gir, 
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 
          
		  XDA.ae_header_id = XAL.ae_header_id 
          AND XDA.ae_line_num = XAL.ae_line_num 
          and XAL.GL_SL_LINK_ID = gir.GL_SL_LINK_ID(+) 
          and xal.GL_SL_LINK_TABLE = gir.GL_SL_LINK_TABLE(+) ----
          and gir.JE_HEADER_ID = c.JE_HEADER_ID(+) 
          AND XAL.code_combination_id = gcc.code_combination_id 
          AND gcc.code_combination_id = c.code_combination_id (+) 
          AND c.je_header_id = b.je_header_id  
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%GAAP%'
--           and c.status = 'P'
      ) GAAP_DATA, 
      (
        SELECT 
          xda.source_distribution_id_num_1 AS TRANSACTION_IDG,  
          gcc.SEGMENT1	As COMPANY,
          gcc.SEGMENT2 as INTERCOMPANY,
          gcc.segment3 AS FERC_ACCOUNT, 
			gcc.SEGMENT4 as OWNING_ORG,
			gcc.SEGMENT5 as	COST_CENTER,
			gcc.SEGMENT6 as PROJECT,
			gcc.SEGMENT7 as REGULATORY_CODE,
			gcc.SEGMENT8 as PRODUCT,
			gcc.SEGMENT9 as FUTURE1,
			gcc.SEGMENT10 as FUTURE2,
            gcc.code_combination_id,
            b.posted_date as posted_date,
            b.period_name as period_name,
          c.accounted_cr AS FERC_CREDIT, 
          c.accounted_dr AS FERC_DEBITS, 
          xda.event_id as event_id, 
          xda.ae_line_num as ae_line_num, 
          B.name as Journal_name,
          b.je_source as source ,
          c.status as line_status,
          b.status as header_status 
        FROM  
          xla_distribution_links XDA, 
          xla_ae_lines XAL, 
          gl_code_combinations gcc, 
          gl_import_references gir, 
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 
		XDA.ae_header_id = XAL.ae_header_id 
          AND XDA.ae_line_num = XAL.ae_line_num 
          and XAL.GL_SL_LINK_ID = gir.GL_SL_LINK_ID(+) 
          and xal.GL_SL_LINK_TABLE = gir.GL_SL_LINK_TABLE(+) ----
          and gir.JE_HEADER_ID = b.JE_HEADER_ID(+) 
          AND XAL.code_combination_id = gcc.code_combination_id 
          AND gcc.code_combination_id = c.code_combination_id (+) 
          AND B.je_header_id = c.je_header_id 
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%FERC%'
      ) FERC_DATA 
    where 
      FERC_DATA.TRANSACTION_IDG = GAAP_DATA.TRANSACTION_IDG(+) 
      and FERC_DATA.event_id = GAAP_DATA.event_id(+) 
      and FERC_DATA.ae_line_num = GAAP_DATA.ae_line_num(+) 
      and FERC_DATA.Journal_name = GAAP_DATA.Journal_name(+)
    union 
    SELECT 
      Case when GAAP_DATA.GAAP_ACCOUNT is null then 'Only FERC' else 'FERC Ledger data in GL (linked GAAP accounts)' end as which, 
      null as TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc,
      nvl(GAAP_DATA.source, FERC_DATA.source) as source, 
      GAAP_DATA.COMPANY	As GAAP_COMPANY,
      GAAP_DATA.INTERCOMPANY as GAAP_INTERCOMPANY,
      GAAP_DATA.GAAP_ACCOUNT as GAAP_ACCOUNT, 
	  GAAP_DATA.OWNING_ORG as GAAP_OWNING_ORG,
	  GAAP_DATA.COST_CENTER as	GAAP_COST_CENTER,
	  GAAP_DATA.PROJECT as GAAP_PROJECT,
	  GAAP_DATA.REGULATORY_CODE as GAAP_REGULATORY_CODE,
	  GAAP_DATA.PRODUCT as GAAP_PRODUCT,
	  GAAP_DATA.FUTURE1 as GAAP_FUTURE1,
	  GAAP_DATA.FUTURE2 as GAAP_FUTURE2,

      FERC_DATA.COMPANY	As FERC_COMPANY,
      FERC_DATA.INTERCOMPANY as FERC_INTERCOMPANY,
      FERC_DATA.FERC_ACCOUNT as FERC_ACCOUNT, 
	  FERC_DATA.OWNING_ORG as FERC_OWNING_ORG,
	  FERC_DATA.COST_CENTER as	FERC_COST_CENTER,
	  FERC_DATA.PROJECT as FERC_PROJECT,
	  FERC_DATA.REGULATORY_CODE as FERC_REGULATORY_CODE,
	  FERC_DATA.PRODUCT as FERC_PRODUCT,
	  FERC_DATA.FUTURE1 as FERC_FUTURE1,
	  FERC_DATA.FUTURE2 as FERC_FUTURE2,
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      GAAP_DATA.code_combination_id as GAAP_CCID,
      GAAP_DATA.posted_date as GAAP_POSTED_DATE,
      GAAP_DATA.period_name as GAAP_PERIOD_NAME,
      FERC_DATA.code_combination_id as FERC_CCID,
      FERC_DATA.posted_date as FERC_POSTED_DATE,
      FERC_DATA.period_name as FERC_PERIOD_NAME,
      null as gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM as gaap_line_num,
      null as ferc_event_id,
      FERC_DATA.FERC_LINE_NUM as ferc_line_num
      ,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status 
    FROM 
      (
        SELECT 
          gcc.SEGMENT1	As COMPANY,
          gcc.SEGMENT2 as INTERCOMPANY,
          gcc.segment3 AS GAAP_ACCOUNT, 
			gcc.SEGMENT4 as OWNING_ORG,
			gcc.SEGMENT5 as	COST_CENTER,
			gcc.SEGMENT6 as PROJECT,
			gcc.SEGMENT7 as REGULATORY_CODE,
			gcc.SEGMENT8 as PRODUCT,
			gcc.SEGMENT9 as FUTURE1,
			gcc.SEGMENT10 as FUTURE2,
          c.accounted_cr AS GAAP_CREDIT, 
          c.accounted_dr AS GAAP_DEBITS, 
          B.name as Journal_name ,
          gcc.code_combination_id,
            b.posted_date as posted_date,
            b.period_name as period_name,
          c.je_line_num as GAAP_LINE_NUM,
          b.je_source as source,
          b.je_header_id as header_id,
          b.parent_je_header_id as parent_header,
          c.status as line_status,
          b.status as header_status 
        FROM  
          gl_code_combinations gcc, 
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 1=1
          and gcc.code_combination_id = c.code_combination_id 
          AND c.je_header_id = b.je_header_id  
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%GAAP%'
      ) GAAP_DATA, 
      (
        SELECT 
          gcc.SEGMENT1	As COMPANY,
          gcc.SEGMENT2 as INTERCOMPANY,
          gcc.segment3 AS FERC_ACCOUNT, 
			gcc.SEGMENT4 as OWNING_ORG,
			gcc.SEGMENT5 as	COST_CENTER,
			gcc.SEGMENT6 as PROJECT,
			gcc.SEGMENT7 as REGULATORY_CODE,
			gcc.SEGMENT8 as PRODUCT,
			gcc.SEGMENT9 as FUTURE1,
			gcc.SEGMENT10 as FUTURE2, 
          c.accounted_cr AS FERC_CREDIT, 
          c.accounted_dr AS FERC_DEBITS,  
          B.name as Journal_name,
          c.je_line_num as FERC_LINE_NUM,
          b.je_source as source,
          b.je_header_id as header_id,
          gcc.code_combination_id,
            b.posted_date as posted_date,
            b.period_name as period_name,
          b.parent_je_header_id as parent_header,
          c.status as line_status,
          b.status as header_status 
        FROM 
          gl_code_combinations gcc,  
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 1=1
          and gcc.code_combination_id = c.code_combination_id
          AND c.je_header_id = b.je_header_id 
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%FERC%'
      ) FERC_DATA 
    where  
      FERC_DATA.FERC_LINE_NUM = GAAP_DATA.GAAP_LINE_NUM(+)
      and FERC_DATA.parent_header = GAAP_DATA.header_id(+)
      and nvl(GAAP_DATA.source, FERC_DATA.source) not in ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
      )  
where 
  1 = 1 
--   and which = 'FERC at PPM(Transaction)' 
  and Line_status = 'P'
--   and TRANSACTION_IDG = '33000'
--   AND (
--     Journal_name ='01-03-2024 Miscellaneous Cost' --'Case 4 Test 03-2132 CIP Category Change'
--   ) --     'CASE 2 FUT TEST-2132 P`OWERPLAN'

order by Transaction_idg
  ;
===================================================================================
------------------- Script
#!/bin/ksh


#-----------------------------------------------------------------------------------------------------------------------------------
#Sourcing the ENV Config File
. ../config/cfs_faw_env.cfg

#Sourcing the GLOBAL Config File
. ../config/cfs_faw_global.cfg

#Sourcing the PWD Config File
. ../config/cfs_faw_pwd.cfg

#Generating Log file dynamically with timestamp
#LOG_FILE_NAME=cfs_faw_custom_load_plan_trigger_`date +"%m_%d_%Y_%H_%M_%S"`.log
LOG_FILE_NAME=cfs_faw_`echo $1`_`date +"%m_%d_%Y_%H_%M_%S"`.log

touch $LOG_PATH/$LOG_FILE_NAME
LOG_FILE=$LOG_PATH/$LOG_FILE_NAME

dt=`date +"%d-%b-%y"`

log_to_file(){
        log_dt=`date +"%Y/%m/%d %T:%3N %Z"`
        log_type=""
        case "$1" in
        "E") log_type="ERROR"
        ;;
        "D") log_type="DEBUG"
        ;;
        "I")
        ;&
        *) log_type="INFO"
        ;;
        esac
        echo -e "$log_dt [$log_type] $2 - $3"

} >> $LOG_FILE

get_status()
{
        status=""
        case "$1" in
        "E") status="Error"
        ;;
        "D") status="Done"
        ;;
        "R") status="Running"
        ;;
        *) status="Processing"
        ;;
        esac

        echo "$status"
}


#boolean flags to handle flow control
is_load_plan_running=true
exception_encountered=false
did_load_plan_complete=false

#SQL to get latest PROCESS_ID, PROCESS_LOG_STATUS_ID and LOADPLAN_INSTANCE_ID from CLN Table cfs_odi_cln_process_log_tbl
#revised query
get_latest_process_log_status_id_query="with cln_tmp as (select CORRELATION_ID,RESTART_ATTEMPTS,PROCESS_ID,PROCESS_LOG_STATUS_ID,PROCESS_START_UTC_DTM,LOAD_PLAN_INSTANCE_ID,LOAD_PLAN_NAME, row_number() over (partition by LOAD_PLAN_INSTANCE_ID,LOAD_PLAN_NAME,PROCESS_LOG_STATUS_ID order by PROCESS_START_UTC_DTM desc) as rnk from cfs_data_layer.cfs_odi_cln_process_log_tbl where PROCESS_ID=9999) select NVL(PROCESS_ID,-1),NVL(PROCESS_LOG_STATUS_ID,'Processing'),NVL(LOAD_PLAN_INSTANCE_ID,'-1'),CORRELATION_ID,RESTART_ATTEMPTS from cln_tmp where rnk=1 and load_plan_name='$1' order by LOAD_PLAN_INSTANCE_ID desc,RESTART_ATTEMPTS desc,PROCESS_LOG_STATUS_ID desc;"


#SQL to get realtime load plan status from SNP Table snp_lpi_run
get_realtime_load_plan_status="with snp_tmp as
( select status, row_number() over (partition by load_plan_name order by i_lp_inst desc, nb_run desc ) as rnk from snp_lpi_run WHERE load_plan_name='$1' ) select status from snp_tmp where rnk=1;"

#SQL to reset PROCESS_LOG_STATUS_ID and RESTART_ATTEMPTS counter of LP Status Record 9999 to 'R' (R or Running - will be used after restart)
#get_load_plan_status_record_update_query(){
#       echo "update cfs_data_layer.cfs_odi_cln_process_log_tbl set PROCESS_LOG_STATUS_ID='$1',RESTART_ATTEMPTS= RESTART_ATTEMPTS+1 where LOAD_PLAN_NAME='$2' and LOAD_PLAN_INSTANCE_ID=$3 and Process_ID=9999;"
#}


# If no record in CLN table for execution date, trigger startloadplan.sh
# else if PROCESS_LOG_STATUS_ID = 'D' for PROCESS_ID=9999, end Load planning
# else if PROCESS_LOG_STATUS_ID ='E' for any record, trigger restartloadplan.sh

res=`sqlplus -s $uname/$pw@$svcname <<EOF
        set pagesize 0 feedback off verify off heading off echo off
        $get_latest_process_log_status_id_query
        exit
        EOF`
IFS=$'\n';
arrIN=($res)
PROCESS_ID=${arrIN[0]}
PROCESS_LOG_STATUS_ID=${arrIN[1]}
PREV_LOAD_PLAN_INSTANCE_ID=${arrIN[2]}
PROCESS_ID=`echo $PROCESS_ID | awk '{$1=$1};1'`
PROCESS_LOG_STATUS_ID=`echo $PROCESS_LOG_STATUS_ID | awk '{$1=$1};1'`
PREV_LOAD_PLAN_INSTANCE_ID=`echo $PREV_LOAD_PLAN_INSTANCE_ID | awk '{$1=$1};1'`
ODI_AGENT_URL="http://$ODI_VM_IP:$ODI_VM_PORT/$ODI_VM_ODI_AGENT_NAME"

#log_to_file "I" "PROCESS_ID" $PROCESS_ID
#Agent URL (For Debugging)
#echo $ODI_AGENT_URL

if [ \( -z "$res" \) -o \( "$PROCESS_ID" = "9999" -a "$PROCESS_LOG_STATUS_ID" = "D" \) ];
then
        op=`ssh -T $ODI_VM_UNAME@$ODI_VM_IP 2>&1 <<EOF
        $ODI/startloadplan.sh "-INSTANCE=$ODI_VM_ODI_INSTANCE" "$1" GLOBAL "-AGENT_URL=$ODI_AGENT_URL"
        exit
        EOF`
        # >>$LOG_FILE 2>&1
        OOTB_SH_EXEC_RETURN_VAL=$?

        log_to_file "I" "ODIStartLoadPlan.SH" `echo $op`

        #echo $op >>$LOG_FILE
        if [ $OOTB_SH_EXEC_RETURN_VAL -ne 0 ];
        then
                is_load_plan_running=false
                #echo "$dt [ERROR]:FATAL ERROR. LOAD PLAN EXECUTION FAILED TO START. EXITING WITH CODE 1." >>$LOG_FILE
                log_to_file "E" "LoadPlanExecution" "FATAL ERROR. LOAD PLAN EXECUTION FAILED TO START. EXITING WITH CODE 1."
                exit 1
        else
                if [ -z "$res" ];
                then
                        #echo "$dt [INFO]: No previous load plan executions detected for today. Starting load plan." >>$LOG_FILE
                        log_to_file "I" "LoadPlanExecution" "No previous load plan executions detected for today. Starting load plan."
                else
                        #echo "$dt [INFO]: Previous load plan execution with exit code 0 detected. Starting load plan." >>$LOG_FILE
                        log_to_file "I" "LoadPlanExecution" "Previous load plan execution with exit code 0 detected. Starting load plan."
                fi
                while [ "$did_load_plan_complete" = "false" -a "$exception_encountered" = "false" ];
                do
                        res=`sqlplus -s $uname/$pw@$svcname <<EOF
                                set pagesize 0 feedback off verify off heading off echo off
                                $get_latest_process_log_status_id_query
                                exit
                                EOF`
                        IFS=$'\n';
                        arrIN=($res)
                        #echo -n "$dt [DEBUG]:RESULT SET:\n$res" >>$LOG_FILE

                        log_to_file "D" "Result Set" $res

                        PROCESS_ID=${arrIN[0]}
                        PROCESS_LOG_STATUS_ID=${arrIN[1]}
                        LOAD_PLAN_INSTANCE_ID=${arrIN[2]}
                        PACKAGE_SCENARIO_NAME=${arrIN[3]}
                        EXECUTION_ATTEMPT=${arrIN[4]}
                        PROCESS_ID=`echo $PROCESS_ID | awk '{$1=$1};1'`
                        PROCESS_LOG_STATUS_ID=`echo $PROCESS_LOG_STATUS_ID | awk '{$1=$1};1'`
                        LOAD_PLAN_INSTANCE_ID=`echo $LOAD_PLAN_INSTANCE_ID | awk '{$1=$1};1'`
                        PACKAGE_SCENARIO_NAME=`echo $PACKAGE_SCENARIO_NAME | awk '{$1=$1};1'`
                        EXECUTION_ATTEMPT=`echo $EXECUTION_ATTEMPT | awk '{$1=$1};1'`

                        res_realtime_status=`sqlplus -s $snp_uname/$snp_pwd@$snp_svcname <<EOF
                                set pagesize 0 feedback off verify off heading off echo off
                                $get_realtime_load_plan_status
                                exit
                                EOF`


                        log_to_file "D" "Load Plan Execution Attempt" $EXECUTION_ATTEMPT
                        LP_REALTIME_STATUS=$res_realtime_status
                        #echo "$dt [DEBUG]:PROCESS_ID: $PROCESS_ID" >>$LOG_FILE
                        log_to_file "D" "CLN Process ID" $PROCESS_ID
                        log_to_file "D" "CLN Load Plan Package Scenario Name" $PACKAGE_SCENARIO_NAME
                        #echo "$dt [DEBUG]:PROCESS_LOG_STATUS_ID: $PROCESS_LOG_STATUS_ID" >>$LOG_FILE
                        log_to_file "D" "CLN Process Log Status" `get_status $PROCESS_LOG_STATUS_ID`
                        #echo "$dt [DEBUG]:LOAD_PLAN_INSTANCE_ID: $LOAD_PLAN_INSTANCE_ID" >>$LOG_FILE
                        log_to_file "D" "CLN Load Plan Instance ID" $LOAD_PLAN_INSTANCE_ID
                        echo `date +"%Y/%m/%d %T:%3N %Z"`" [DEBUG] LoadPlanExecution - LOAD PLAN IS STILL EXECUTING...."
                        #echo "$dt [DEBUG]:new res: $res_realtime_status" >>$LOG_FILE
                        log_to_file "D" "SNP Real Time Status" `get_status $res_realtime_status`
                        #echo "$dt [DEBUG]:Realtime LP status from SNP: $LP_REALTIME_STATUS" >>$LOG_FILE

                        sleep 5
                        unset IFS

                        if [ "$LP_REALTIME_STATUS" = "E" ]
                        then
                                exception_encountered=true
                        elif  [ \( "$PROCESS_LOG_STATUS_ID" = "D" -a "$PROCESS_ID" = "9999" \) -a \( "$LOAD_PLAN_INSTANCE_ID" -ne "$PREV_LOAD_PLAN_INSTANCE_ID" \) ]
                        then
                                did_load_plan_complete=true
                                #echo "$dt [DEBUG]:LP Complete in while" >>$LOG_FILE
                                log_to_file "D" "LoadPlanExecution" "Inside while loop, load plan completed flag set to TRUE."

                        fi

                done
        fi

elif [ "$PROCESS_LOG_STATUS_ID" = "E" ]
then
        #echo "$dt [DEBUG]: Previous Instance ID found with PROCESS_LOG_STATUS_ID=E. Restarting Load plan." >>$LOG_FILE
        log_to_file "D" "LoadPlanExecution" "Previous Instance ID found with PROCESS_LOG_STATUS_ID=E. Restarting Load plan."

        #new_query = `get_load_plan_status_record_update_query 'R' $1 $PREV_LOAD_PLAN_INSTANCE_ID`
        #update_query =`get_load_plan_status_record_update_query 'R' $1 $PREV_LOAD_PLAN_INSTANCE_ID`
        res=`sqlplus -s $uname/$pw@$svcname <<EOF
                                set pagesize 0 feedback off verify off heading off echo off
                                update cfs_data_layer.cfs_odi_cln_process_log_tbl set PROCESS_LOG_STATUS_ID='R',RESTART_ATTEMPTS= RESTART_ATTEMPTS+1 where LOAD_PLAN_NAME='$1' and LOAD_PLAN_INSTANCE_ID=$PREV_LOAD_PLAN_INSTANCE_ID and Process_ID=9999;
                                commit;
                                exit
                                EOF`

        log_to_file "D" "LoadPlanUpdate" "Updated 9999 record."

        op=`ssh -T $ODI_VM_UNAME@$ODI_VM_IP 2>&1 <<EOF
        $ODI/restartloadplan.sh "-INSTANCE=$ODI_VM_ODI_INSTANCE" "$PREV_LOAD_PLAN_INSTANCE_ID" "-AGENT_URL=$ODI_AGENT_URL"
        exit
        EOF`
        # >>$LOG_FILE 2>&1
        OOTB_SH_EXEC_RETURN_VAL=$?
        #echo $op
        log_to_file "I" "ODIRestartLoadPlan.SH" `echo $op`

        if [ $OOTB_SH_EXEC_RETURN_VAL -ne 0 ];
        then
                is_load_plan_running=false
                #echo "$dt [ERROR]:FATAL ERROR. LOAD PLAN EXECUTION FAILED TO START. EXITING WITH CODE 1." >>$LOG_FILE
                log_to_file "E" "LoadPlanExecution" "FATAL ERROR. LOAD PLAN EXECUTION FAILED TO START. EXITING WITH CODE 1."
                exit 1
        else
        while [ "$did_load_plan_complete" = "false" -a "$exception_encountered" = "false" ];
                do
                        res=`sqlplus -s $uname/$pw@$svcname <<EOF
                                set pagesize 0 feedback off verify off heading off echo off
                                $get_latest_process_log_status_id_query
                                exit
                                EOF`
                        IFS=$'\n';
                        arrIN=($res)
                        PROCESS_ID=${arrIN[0]}
                        PROCESS_LOG_STATUS_ID=${arrIN[1]}
                        LOAD_PLAN_INSTANCE_ID=${arrIN[2]}
                        PACKAGE_SCENARIO_NAME=${arrIN[3]}
                        EXECUTION_ATTEMPT=${arrIN[4]}

                        PROCESS_ID=`echo $PROCESS_ID | awk '{$1=$1};1'`
                        PROCESS_LOG_STATUS_ID=`echo $PROCESS_LOG_STATUS_ID | awk '{$1=$1};1'`
                        LOAD_PLAN_INSTANCE_ID=`echo $LOAD_PLAN_INSTANCE_ID | awk '{$1=$1};1'`
                        PACKAGE_SCENARIO_NAME=`echo $PACKAGE_SCENARIO_NAME | awk '{$1=$1};1'`
                        EXECUTION_ATTEMPT=`echo $EXECUTION_ATTEMPT | awk '{$1=$1};1'`


                        res_realtime_status=`sqlplus -s $snp_uname/$snp_pwd@$snp_svcname <<EOF
                                set pagesize 0 feedback off verify off heading off echo off
                                $get_realtime_load_plan_status
                                exit
                                EOF`

                        log_to_file "D" "Load Plan Execution Attempt" $EXECUTION_ATTEMPT
                        LP_REALTIME_STATUS=$res_realtime_status
                        #LP_REALTIME_STATUS=$res_realtime_status
                        #echo "$dt [DEBUG]:PROCESS_ID: $PROCESS_ID" >>$LOG_FILE
                        log_to_file "D" "CLN Process ID" $PROCESS_ID
                        log_to_file "D" "CLN Load Plan Package Scenario Name" $PACKAGE_SCENARIO_NAME
                        #echo "$dt [DEBUG]:PROCESS_LOG_STATUS_ID: $PROCESS_LOG_STATUS_ID" >>$LOG_FILE
                        log_to_file "D" "CLN Process Log Status" `get_status $PROCESS_LOG_STATUS_ID`
                        #echo "$dt [DEBUG]:LOAD_PLAN_INSTANCE_ID: $LOAD_PLAN_INSTANCE_ID" >>$LOG_FILE
                        log_to_file "D" "CLN Load Plan Instance ID" $LOAD_PLAN_INSTANCE_ID
                        echo `date +"%Y/%m/%d %T:%3N %Z"`" [DEBUG] LoadPlanExecution - LOAD PLAN IS STILL EXECUTING...."
                        #echo "$dt [DEBUG]:new res: $res_realtime_status" >>$LOG_FILE
                        log_to_file "D" "SNP Real Time Status" `get_status $res_realtime_status`
                        sleep 5
                        unset IFS

                        if [ "$LP_REALTIME_STATUS" = "E" ]
                        then
                                exception_encountered=true
                        elif  [ "$PROCESS_LOG_STATUS_ID" = "D" -a "$PROCESS_ID" = "9999" ]
                        then
                                did_load_plan_complete=true
                                #echo "$dt [DEBUG]: LP Complete in while" >>$LOG_FILE
                                log_to_file "D" "LoadPlanExecution" "Inside while loop, load plan completed flag set to TRUE."
                        fi

                done
        fi

fi


if [ "$did_load_plan_complete" = "true" -a "$exception_encountered" = "false" ] ;
then
        #echo "$dt [INFO]: Load plan completed successfully! exiting with code 0." >>$LOG_FILE
        log_to_file "I" "LoadPlanExecution" "Load plan completed successfully. exiting with code 0."
        exit 0

else
        #echo "$dt [ERROR]: Load plan failed!, exiting with code 1." >>$LOG_FILE
        log_to_file "E" "LoadPlanExecution" "Load plan failed. exiting with code 1."

        exit 1
fi
---------------------------
Hi Shiva,

Thanks for sharing these details, I have initiated the build and will keep you posted.

Also wants to bring up this point that including this BIP report, we have a total count of BIP reports 6, which exceeds our previous estimation of 5 BIP.
Details as below

SELECT 
      'FERC at PPM(Transaction)' AS which,
      GAAP_DATA.segment AS GAAP_SEGEMNT,
      FERC_DATA.segment AS FERC_SEGEMNT,
      GAAP_DATA.TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name AS ferc, 
      COALESCE(GAAP_DATA.source, FERC_DATA.source) AS source,
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      GAAP_DATA.event_id AS gaap_event_id,
      GAAP_DATA.ae_line_num AS gaap_line_num,
      GAAP_DATA.event_id AS ferc_event_id,
      FERC_DATA.ae_line_num AS ferc_line_num,
      COALESCE(GAAP_DATA.line_status, FERC_DATA.line_status) AS line_status,
      COALESCE(GAAP_DATA.header_status, FERC_DATA.header_status) AS header_status
FROM 
      (
        SELECT 
          xda.JournalEntryDistributionSourceDistributionIdNum1 AS TRANSACTION_IDG, 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          xda.JournalEntryDistributionEventId AS event_id, 
          xda.JournalEntryDistributionAeLineNum AS ae_line_num, 
          B.GlJeHeadersName AS Journal_name,
          b.GlJeHeadersJeSource AS source,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status  
        FROM 
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalDistributionExtractPVO' XDA
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalLineExtractPVO' XAL
          ON XDA.JournalEntryDistributionAeHeaderId = XAL.JournalEntryLineAeHeaderId 
          AND XDA.JournalEntryDistributionAeLineNum = XAL.JournalEntryLineAeLineNum 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          ON XAL.JournalEntryLineCodeCombinationId = gcc.CodeCombinationCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalImportReferenceExtractPVO' gir
          ON XAL.JournalEntryLineGlSlLinkId = gir.GlImportReferencesGlSlLinkId 
          AND XAL.JournalEntryLineGlSlLinkTable = gir.GlImportReferencesGlSlLinkTable 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
          ON gir.GlImportReferencesJeHeaderId = c.JeHeaderId 
          AND gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
          ON c.JeHeaderId = B.JeHeaderId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
          ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId 
        WHERE 
          gll.LedgerName LIKE '%GAAP%'
          AND c.GlJeLinesStatus = 'P'
      ) GAAP_DATA
LEFT JOIN 
      (
        SELECT 
          xda.JournalEntryDistributionSourceDistributionIdNum1 AS TRANSACTION_IDG,  
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS, 
          xda.JournalEntryDistributionEventId AS event_id, 
          xda.JournalEntryDistributionAeLineNum AS ae_line_num, 
          B.GlJeHeadersName AS Journal_name,
          b.GlJeHeadersJeSource AS source,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM  
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalDistributionExtractPVO' XDA
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalLineExtractPVO' XAL
          ON XDA.JournalEntryDistributionAeHeaderId = XAL.JournalEntryLineAeHeaderId 
          AND XDA.JournalEntryDistributionAeLineNum = XAL.JournalEntryLineAeLineNum 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          ON XAL.JournalEntryLineCodeCombinationId = gcc.CodeCombinationCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalImportReferenceExtractPVO' gir
          ON XAL.JournalEntryLineGlSlLinkId = gir.GlImportReferencesGlSlLinkId 
          AND XAL.JournalEntryLineGlSlLinkTable = gir.GlImportReferencesGlSlLinkTable 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
          ON gir.GlImportReferencesJeHeaderId = c.JeHeaderId 
          AND gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
          ON c.JeHeaderId = B.JeHeaderId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
          ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId 
        WHERE 
          gll.LedgerName LIKE '%FERC%'
          AND c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
ON 
      FERC_DATA.TRANSACTION_IDG = GAAP_DATA.TRANSACTION_IDG 
      AND FERC_DATA.event_id = GAAP_DATA.event_id 
      AND FERC_DATA.ae_line_num = GAAP_DATA.ae_line_num 
      AND FERC_DATA.Journal_name = GAAP_DATA.Journal_name
FETCH NEXT 10 ROWS ONLY
union 
    SELECT 
      CASE WHEN GAAP_DATA.GAAP_ACCOUNT IS NULL THEN 'Only FERC' ELSE 'FERC Ledger data in GL (linked GAAP accounts)' END AS which, 
      GAAP_DATA.segment AS GAAP_SEGMENT,
      FERC_DATA.segment AS FERC_SEGMENT,
      NULL AS TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name AS ferc,
      COALESCE(GAAP_DATA.source, FERC_DATA.source) AS source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      NULL AS gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM AS gaap_line_num,
      NULL AS ferc_event_id,
      FERC_DATA.FERC_LINE_NUM AS ferc_line_num,
      COALESCE(GAAP_DATA.line_status, FERC_DATA.line_status) AS line_status,
      COALESCE(GAAP_DATA.header_status, FERC_DATA.header_status) AS header_status 
FROM 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS GAAP_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM  
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%GAAP%'
          AND c.GlJeLinesStatus = 'P'
      ) GAAP_DATA
      FULL OUTER JOIN 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT,
          gcc.CodeCombinationSegment6 AS segment,  
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS,  
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS FERC_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM 
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%FERC%'
          AND c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
    ON 
      FERC_DATA.FERC_LINE_NUM = GAAP_DATA.GAAP_LINE_NUM
      AND FERC_DATA.parent_header = GAAP_DATA.header_id
      AND COALESCE(GAAP_DATA.source, FERC_DATA.source) NOT IN ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
WHERE 
    header_status = 'P'
    AND FERC_DATA.FERC_ACCOUNT IS NULL

UNION 

SELECT 
      CASE WHEN FERC_DATA.FERC_ACCOUNT IS NULL THEN 'GAAP Only' ELSE 'Please check this scenario' END AS which, 
      GAAP_DATA.segment AS GAAP_SEGMENT,
      FERC_DATA.segment AS FERC_SEGMENT,
      NULL AS TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name AS ferc,
      COALESCE(GAAP_DATA.source, FERC_DATA.source) AS source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      NULL AS gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM AS gaap_line_num,
      NULL AS ferc_event_id,
      FERC_DATA.FERC_LINE_NUM AS ferc_line_num,
      COALESCE(GAAP_DATA.line_status, FERC_DATA.line_status) AS line_status,
      COALESCE(GAAP_DATA.header_status, FERC_DATA.header_status) AS header_status 
FROM 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS GAAP_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM  
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%GAAP%'
          AND c.GlJeLinesStatus = 'P'
      ) GAAP_DATA
      FULL OUTER JOIN 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT,
          gcc.CodeCombinationSegment6 AS segment,  
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS,  
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS FERC_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM 
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%FERC%'
          AND c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
    ON 
      GAAP_DATA.GAAP_LINE_NUM = FERC_DATA.FERC_LINE_NUM
      AND GAAP_DATA.header_id = FERC_DATA.parent_header
      AND COALESCE(GAAP_DATA.source, FERC_DATA.source) NOT IN ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
WHERE 
    header_status = 'P'
    AND FERC_DATA.FERC_ACCOUNT IS NULL
      )  
where 
  1 = 1 
order by which, Transaction_idg
FETCH NEXT 10 ROWS ONLY


--------------
SELECT 
      CASE WHEN GAAP_DATA.GAAP_ACCOUNT IS NULL THEN 'Only FERC' ELSE 'FERC Ledger data in GL (linked GAAP accounts)' END AS which, 
      GAAP_DATA.segment AS GAAP_SEGMENT,
      FERC_DATA.segment AS FERC_SEGMENT,
      NULL AS TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name AS ferc,
      COALESCE(GAAP_DATA.source, FERC_DATA.source) AS source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      NULL AS gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM AS gaap_line_num,
      NULL AS ferc_event_id,
      FERC_DATA.FERC_LINE_NUM AS ferc_line_num,
      COALESCE(GAAP_DATA.line_status, FERC_DATA.line_status) AS line_status,
      COALESCE(GAAP_DATA.header_status, FERC_DATA.header_status) AS header_status 
FROM 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS GAAP_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM  
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%GAAP%'
          AND c.GlJeLinesStatus = 'P'
      ) GAAP_DATA
      FULL OUTER JOIN 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT,
          gcc.CodeCombinationSegment6 AS segment,  
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS,  
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS FERC_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM 
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%FERC%'
          AND c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
    ON 
      FERC_DATA.FERC_LINE_NUM = GAAP_DATA.GAAP_LINE_NUM
      AND FERC_DATA.parent_header = GAAP_DATA.header_id
      AND COALESCE(GAAP_DATA.source, FERC_DATA.source) NOT IN ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
WHERE 
    header_status = 'P'
    AND FERC_DATA.FERC_ACCOUNT IS NULL

UNION 

SELECT 
      CASE WHEN FERC_DATA.FERC_ACCOUNT IS NULL THEN 'GAAP Only' ELSE 'Please check this scenario' END AS which, 
      GAAP_DATA.segment AS GAAP_SEGMENT,
      FERC_DATA.segment AS FERC_SEGMENT,
      NULL AS TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name AS ferc,
      COALESCE(GAAP_DATA.source, FERC_DATA.source) AS source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      NULL AS gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM AS gaap_line_num,
      NULL AS ferc_event_id,
      FERC_DATA.FERC_LINE_NUM AS ferc_line_num,
      COALESCE(GAAP_DATA.line_status, FERC_DATA.line_status) AS line_status,
      COALESCE(GAAP_DATA.header_status, FERC_DATA.header_status) AS header_status 
FROM 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS GAAP_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM  
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%GAAP%'
          AND c.GlJeLinesStatus = 'P'
      ) GAAP_DATA
      FULL OUTER JOIN 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT,
          gcc.CodeCombinationSegment6 AS segment,  
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS,  
          B.GlJeHeadersName AS Journal_name,
          c.JeLineNum AS FERC_LINE_NUM,
          b.GlJeHeadersJeSource AS source,
          b.JeHeaderId AS header_id,
          b.GlJeHeadersParentJeHeaderId AS parent_header,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM 
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
            ON gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
            ON c.JeHeaderId = b.JeHeaderId
          LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
            ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId
        WHERE 
          gll.LedgerName LIKE '%FERC%'
          AND c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
    ON 
      GAAP_DATA.GAAP_LINE_NUM = FERC_DATA.FERC_LINE_NUM
      AND GAAP_DATA.header_id = FERC_DATA.parent_header
      AND COALESCE(GAAP_DATA.source, FERC_DATA.source) NOT IN ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
WHERE 
    header_status = 'P'
    AND FERC_DATA.FERC_ACCOUNT IS NULL




----------------
SELECT 
      Case when GAAP_DATA.GAAP_ACCOUNT is null then 'Only FERC' else 'FERC Ledger data in GL (linked GAAP accounts)' end as which, 
      GAAP_DATA.segment as GAAP_SEGEMNT,
      FERC_DATA.segment as FERC_SEGEMNT,
      null as TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc,
      nvl(GAAP_DATA.source, FERC_DATA.source) as source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      null as gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM as gaap_line_num,
      null as ferc_event_id,
      FERC_DATA.FERC_LINE_NUM as ferc_line_num
      ,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status 
    FROM 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          B.GlJeHeadersName as Journal_name ,
          c.JeLineNum as GAAP_LINE_NUM,
          b.GlJeHeadersJeSource as source,
          b.JeHeaderId as header_id,
          b.GlJeHeadersParentJeHeaderId as parent_header,
          c.GlJeLinesStatus as line_status,
          b.GlJeHeadersStatus as header_status 
        FROM  
          EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc,          
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B,
 EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
        WHERE 1=1
          and gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId 
          AND c.JeHeaderId = b.JeHeaderId  
          AND B.GlJeHeadersLedgerId = gll.LedgerLedgerId (+)
          AND gll.LedgerName LIKE '%GAAP%'
		  and c.GlJeLinesStatus = 'P'
      ) GAAP_DATA, 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT,
          gcc.CodeCombinationSegment6 AS segment,  
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS,  
          B.GlJeHeadersName as Journal_name,
          c.JeLineNum as FERC_LINE_NUM,
          b.GlJeHeadersJeSource as source,
          b.JeHeaderId as header_id,
          b.GlJeHeadersParentJeHeaderId as parent_header,
          c.GlJeLinesStatus as line_status,
          b.GlJeHeadersStatus as header_status 
        FROM 
		EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc,          
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B,
 EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
        WHERE 1=1
          and gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          AND c.JeHeaderId = b.JeHeaderId 
          AND B.GlJeHeadersLedgerId = gll.LedgerLedgerId (+)
          AND gll.LedgerName LIKE '%FERC%'
		  and c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
    where  
      FERC_DATA.FERC_LINE_NUM = GAAP_DATA.GAAP_LINE_NUM(+)
      and FERC_DATA.parent_header = GAAP_DATA.header_id(+)
      and nvl(GAAP_DATA.source, FERC_DATA.source) not in ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
            --and (FERC_DATA.Journal_name = 'GL-FUT-014-J2') --     and gjh.name = '22-03-2024 Miscellaneous Cost'
	union 
    SELECT 
      Case when FERC_DATA.FERC_ACCOUNT is null then 'GAAP Only' else 'Please check this scenario' end as which, 
      GAAP_DATA.segment as GAAP_SEGEMNT,
      FERC_DATA.segment as FERC_SEGEMNT,
      null as TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc,
      nvl(GAAP_DATA.source, FERC_DATA.source) as source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      null as gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM as gaap_line_num,
      null as ferc_event_id,
      FERC_DATA.FERC_LINE_NUM as ferc_line_num
      ,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status 
    FROM 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          B.GlJeHeadersName as Journal_name ,
          c.JeLineNum as GAAP_LINE_NUM,
          b.GlJeHeadersJeSource as source,
          b.JeHeaderId as header_id,
          b.GlJeHeadersParentJeHeaderId as parent_header,
          c.GlJeLinesStatus as line_status,
          b.GlJeHeadersStatus as header_status 
        FROM  
          EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc,          
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B,
 EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
        WHERE 1=1
          and gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId 
          AND c.JeHeaderId = b.JeHeaderId  
          AND B.GlJeHeadersLedgerId = gll.LedgerLedgerId (+)
          AND gll.LedgerName LIKE '%GAAP%'
		  and c.GlJeLinesStatus = 'P'
      ) GAAP_DATA, 
      (
        SELECT 
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT,
          gcc.CodeCombinationSegment6 AS segment,  
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS,  
          B.GlJeHeadersName as Journal_name,
          c.JeLineNum as FERC_LINE_NUM,
          b.GlJeHeadersJeSource as source,
          b.JeHeaderId as header_id,
          b.GlJeHeadersParentJeHeaderId as parent_header,
          c.GlJeLinesStatus as line_status,
          b.GlJeHeadersStatus as header_status 
        FROM 
          EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc,          
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B,
 EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll 
        WHERE 1=1
          and gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId
          AND c.JeHeaderId = b.JeHeaderId 
          AND B.GlJeHeadersLedgerId = gll.LedgerLedgerId (+)
          AND gll.LedgerName LIKE '%FERC%'
		  and c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
    where  
      GAAP_DATA.GAAP_LINE_NUM  = FERC_DATA.FERC_LINE_NUM(+)
      and GAAP_DATA.header_id  = FERC_DATA.parent_header(+)
      and nvl(GAAP_DATA.source, FERC_DATA.source) not in ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
	  and header_status = 'P'
	  and FERC_DATA.FERC_ACCOUNT is null

----------------
SELECT 
      'FERC at PPM(Transaction)' AS which,
      GAAP_DATA.segment AS GAAP_SEGEMNT,
      FERC_DATA.segment AS FERC_SEGEMNT,
      GAAP_DATA.TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name AS ferc, 
      NVL(GAAP_DATA.source, FERC_DATA.source) AS source,
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      GAAP_DATA.event_id AS gaap_event_id,
      GAAP_DATA.ae_line_num AS gaap_line_num,
      GAAP_DATA.event_id AS ferc_event_id,
      FERC_DATA.ae_line_num AS ferc_line_num,
      NVL(GAAP_DATA.line_status, FERC_DATA.line_status) AS line_status,
      NVL(GAAP_DATA.header_status, FERC_DATA.header_status) AS header_status
FROM 
      (
        SELECT 
          xda.JournalEntryDistributionSourceDistributionIdNum1 AS TRANSACTION_IDG, 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          xda.JournalEntryDistributionEventId AS event_id, 
          xda.JournalEntryDistributionAeLineNum AS ae_line_num, 
          B.GlJeHeadersName AS Journal_name,
          b.GlJeHeadersJeSource AS source,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status  
        FROM 
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalDistributionExtractPVO' XDA
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalLineExtractPVO' XAL
          ON XDA.JournalEntryDistributionAeHeaderId = XAL.JournalEntryLineAeHeaderId 
          AND XDA.JournalEntryDistributionAeLineNum = XAL.JournalEntryLineAeLineNum 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          ON XAL.JournalEntryLineCodeCombinationId = gcc.CodeCombinationCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalImportReferenceExtractPVO' gir
          ON XAL.JournalEntryLineGlSlLinkId = gir.GlImportReferencesGlSlLinkId 
          AND XAL.JournalEntryLineGlSlLinkTable = gir.GlImportReferencesGlSlLinkTable 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
          ON gir.GlImportReferencesJeHeaderId = c.JeHeaderId 
          AND gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
          ON c.JeHeaderId = B.JeHeaderId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
          ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId 
        WHERE 
          gll.LedgerName LIKE '%GAAP%'
          AND c.GlJeLinesStatus = 'P'
      ) GAAP_DATA
LEFT JOIN 
      (
        SELECT 
          xda.JournalEntryDistributionSourceDistributionIdNum1 AS TRANSACTION_IDG,  
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS, 
          xda.JournalEntryDistributionEventId AS event_id, 
          xda.JournalEntryDistributionAeLineNum AS ae_line_num, 
          B.GlJeHeadersName AS Journal_name,
          b.GlJeHeadersJeSource AS source,
          c.GlJeLinesStatus AS line_status,
          b.GlJeHeadersStatus AS header_status 
        FROM  
          EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalDistributionExtractPVO' XDA
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalLineExtractPVO' XAL
          ON XDA.JournalEntryDistributionAeHeaderId = XAL.JournalEntryLineAeHeaderId 
          AND XDA.JournalEntryDistributionAeLineNum = XAL.JournalEntryLineAeLineNum 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc
          ON XAL.JournalEntryLineCodeCombinationId = gcc.CodeCombinationCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalImportReferenceExtractPVO' gir
          ON XAL.JournalEntryLineGlSlLinkId = gir.GlImportReferencesGlSlLinkId 
          AND XAL.JournalEntryLineGlSlLinkTable = gir.GlImportReferencesGlSlLinkTable 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c
          ON gir.GlImportReferencesJeHeaderId = c.JeHeaderId 
          AND gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B
          ON c.JeHeaderId = B.JeHeaderId 
        LEFT JOIN EXTERNAL('ADF', '"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
          'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
          ON B.GlJeHeadersLedgerId = gll.LedgerLedgerId 
        WHERE 
          gll.LedgerName LIKE '%FERC%'
          AND c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
ON 
      FERC_DATA.TRANSACTION_IDG = GAAP_DATA.TRANSACTION_IDG 
      AND FERC_DATA.event_id = GAAP_DATA.event_id 
      AND FERC_DATA.ae_line_num = GAAP_DATA.ae_line_num 
      AND FERC_DATA.Journal_name = GAAP_DATA.Journal_name;




----------

SELECT 
      'FERC at PPM(Transaction)' as which,
      GAAP_DATA.segment as GAAP_SEGEMNT,
      FERC_DATA.segment as FERC_SEGEMNT,
      GAAP_DATA.TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc, 
      nvl(GAAP_DATA.source, FERC_DATA.source) as source,
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      GAAP_DATA.event_id as gaap_event_id,
      GAAP_DATA.ae_line_num as gaap_line_num,
      GAAP_DATA.event_id as ferc_event_id,
      FERC_DATA.ae_line_num as ferc_line_num,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status
FROM 
      (
        SELECT 
          xda.JournalEntryDistributionSourceDistributionIdNum1 AS TRANSACTION_IDG, 
          gcc.CodeCombinationSegment3 AS GAAP_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS GAAP_CREDIT, 
          c.GlJeLinesAccountedDr AS GAAP_DEBITS, 
          xda.JournalEntryDistributionEventId as event_id, 
          xda.JournalEntryDistributionAeLineNum as ae_line_num, 
          B.GlJeHeadersName as Journal_name,
          b.GlJeHeadersJeSource as source,
          c.GlJeLinesStatus as line_status,
          b.GlJeHeadersStatus as header_status  
        FROM 
		EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalDistributionExtractPVO' XDA,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalLineExtractPVO' XAL,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalImportReferenceExtractPVO' gir,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B,
 EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
        WHERE 
          
		  XDA.JournalEntryDistributionAeHeaderId = XAL.JournalEntryLineAeHeaderId 
          AND XDA.JournalEntryDistributionAeLineNum = XAL.JournalEntryLineAeLineNum 
          and XAL.JournalEntryLineGlSlLinkId = gir.GlImportReferencesGlSlLinkId(+) 
          and xal.JournalEntryLineGlSlLinkTable = gir.GlImportReferencesGlSlLinkTable(+) 
          and gir.GlImportReferencesJeHeaderId = c.JeHeaderId(+) 
          AND XAL.JournalEntryLineCodeCombinationId = gcc.CodeCombinationCodeCombinationId 
          AND gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId (+) 
          AND c.JeHeaderId = b.JeHeaderId  
          AND B.GlJeHeadersLedgerId = gll.LedgerLedgerId (+)
          AND gll.LedgerName LIKE '%GAAP%'
          and c.GlJeLinesStatus = 'P'
      ) GAAP_DATA, 
      (
        SELECT 
          xda.JournalEntryDistributionSourceDistributionIdNum1 AS TRANSACTION_IDG,  
          gcc.CodeCombinationSegment3 AS FERC_ACCOUNT, 
          gcc.CodeCombinationSegment6 AS segment, 
          c.GlJeLinesAccountedCr AS FERC_CREDIT, 
          c.GlJeLinesAccountedDr AS FERC_DEBITS, 
          xda.JournalEntryDistributionEventId as event_id, 
          xda.JournalEntryDistributionAeLineNum as ae_line_num, 
          B.GlJeHeadersName as Journal_name,
          b.GlJeHeadersJeSource as source ,
          c.GlJeLinesStatus as line_status,
          b.GlJeHeadersStatus as header_status 
        FROM  
		EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalDistributionExtractPVO' XDA,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.XlaBiccExtractAM.SubledgerJournalLineExtractPVO' XAL,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.CodeCombinationExtractPVO' gcc,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalImportReferenceExtractPVO' gir,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalLineExtractPVO' c,
EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.JournalHeaderExtractPVO' B,
 EXTERNAL('ADF','"oracle.apps.fscm.model.analytics.applicationModule.FscmTopModelAM_FscmTopModelAMLocal"."Connection Pool"').
'FscmTopModelAM.FinExtractAM.GlBiccExtractAM.LedgerExtractPVO' gll
        WHERE 
		XDA.JournalEntryDistributionAeHeaderId = XAL.JournalEntryLineAeHeaderId 
          AND XDA.JournalEntryDistributionAeLineNum = XAL.JournalEntryLineAeLineNum 
          and XAL.JournalEntryLineGlSlLinkId = gir.GlImportReferencesGlSlLinkId(+) 
          and xal.JournalEntryLineGlSlLinkTable = gir.GlImportReferencesGlSlLinkTable(+)
          and gir.GlImportReferencesJeHeaderId = c.JeHeaderId(+) 
          AND XAL.JournalEntryLineCodeCombinationId = gcc.CodeCombinationCodeCombinationId 
          AND gcc.CodeCombinationCodeCombinationId = c.GlJeLinesCodeCombinationId (+) 
          AND c.JeHeaderId = B.JeHeaderId
          AND B.GlJeHeadersLedgerId = gll.LedgerLedgerId (+) 
          AND gll.LedgerName LIKE '%FERC%'
		  and c.GlJeLinesStatus = 'P'
      ) FERC_DATA 
	  where 
      FERC_DATA.TRANSACTION_IDG = GAAP_DATA.TRANSACTION_IDG(+) 
      and FERC_DATA.event_id = GAAP_DATA.event_id(+) 
      and FERC_DATA.ae_line_num = GAAP_DATA.ae_line_num(+) 
      and FERC_DATA.Journal_name = GAAP_DATA.Journal_name(+)



----------------
HCM_LOAD:
SCEN_PKG_SDE_EFS_GLOBAL_PERSON
 
ODI-1217: Session SCEN_PKG_SDE_EFS_GLOBAL_PERSON (1278) fails with return code 6550.
ODI-1226: Step UPDATE EFS_TECH_CLN_PROCESS_LOG_TBL  fails after 1 attempt(s).
ODI-1232: Procedure UPDATE EFS_TECH_CLN_PROCESS_LOG_TBL  execution fails.
ODI-1228: Task Procedure-UPDATE EFS_TECH_CLN_PROCESS_LOG_TBL -UPDATE EFS_TECH_CLN_PROCESS_LOG_TBL fails on the target connection EFS_DEV_DATA_LAYER.
Caused By: java.sql.BatchUpdateException: ORA-06550: line 586, column 23:
PL/SQL: ORA-01704: string literal too long
ORA-06550: line 2, column 1:
PL/SQL: SQL Statement ignored

-----------response ------


SELECT 
  company, 
  initiative, 
  cost_center, 
  ACCOUNT, 
  office, 
  trader, 
  future_1, 
  period_name "GL Period Name", 
  description, 
  je_source "SysDesc", 
  je_category "Category", 
  NAME "Batch", 
  vendor_name "Vendor Name/Customer Name", 
  chk_num "Invoice Number", 
  segment1 "Purchase Order Number", 
  NULL "Comments", 
  SUM(unrounded_entered_dr) "Entered Debit", 
  SUM(unrounded_entered_cr) "Entered Credit", 
  SUM(ENT_DR_CR) "Entered Debit-Credit", 
  currency_code "Entered Currency", 
  SUM(unrounded_accounted_cr) "Accounted Credit", 
  SUM(unrounded_accounted_dr) "Accounted Debit", 
  SUM(ACCT_DR_CR) "Accounted Debit-Credit", 
  accounted_currency, 
  source_id 
FROM 
(
    SELECT 
      gcc.segment1 company, 
      gcc.segment2 initiative, 
      gcc.segment3 cost_center, 
      gcc.segment4 ACCOUNT, 
      gcc.segment5 office, 
      gcc.segment6 trader, 
      gcc.segment7 future_1, 
      gjh.period_name, 
      xal.description description, 
      gjh.je_source, 
      gjh.je_category, 
      gjb.NAME, 
      aps.vendor_name, 
      TO_CHAR(aca.check_number) chk_num, 
      pha.segment1, 
      xdl.unrounded_entered_dr, 
      xdl.unrounded_entered_cr, 
      NVL(xdl.unrounded_entered_dr, 0) - NVL(xdl.unrounded_entered_cr, 0) ENT_DR_CR, 
      xal.currency_code, 
      xdl.unrounded_accounted_cr, 
      xdl.unrounded_accounted_dr, 
      NVL(xdl.unrounded_accounted_dr, 0) - NVL(xdl.unrounded_accounted_cr, 0) ACCT_DR_CR, 
      gl.currency_code accounted_currency, 
      xte.source_id_int_1 source_id, 
      xal.ae_line_num 
    FROM 
      xla_distribution_links xdl
    INNER JOIN xla_ae_lines xal ON xdl.ae_header_id = xal.ae_header_id AND xdl.ae_line_num = xal.ae_line_num AND xdl.event_id = xev.event_id
    INNER JOIN xla_ae_headers xah ON xal.ae_header_id = xah.ae_header_id
    INNER JOIN xla_events xev ON xah.event_id = xev.event_id
    INNER JOIN xla_transaction_entities xte ON xev.entity_id = xte.entity_id AND xah.entity_id = xte.entity_id
    INNER JOIN gl_import_references gir ON xal.gl_sl_link_id = gir.gl_sl_link_id
    INNER JOIN gl_je_lines gjl ON gir.je_line_num = gjl.je_line_num AND gjl.je_header_id = gir.je_header_id
    INNER JOIN gl_je_headers gjh ON gjl.je_header_id = gjh.je_header_id AND gjh.je_header_id = gir.je_header_id
    INNER JOIN gl_code_combinations gcc ON gjl.code_combination_id = gcc.code_combination_id
    INNER JOIN gl_je_batches gjb ON gjh.je_batch_id = gjb.je_batch_id
    INNER JOIN gl_ledgers gl ON gjh.ledger_id = gl.ledger_id
    LEFT JOIN ap_checks_all aca ON xte.source_id_int_1 = aca.check_id
    LEFT JOIN ap_payment_hist_dists aphd ON aphd.payment_hist_dist_id = xdl.source_distribution_id_num_1
    LEFT JOIN ap_invoice_distributions_all aida ON aida.invoice_distribution_id = aphd.invoice_distribution_id
    LEFT JOIN ap_invoice_payments_all aipa ON aipa.invoice_payment_id = aphd.invoice_payment_id AND aipa.invoice_id = aia.invoice_id AND aipa.check_id = aca.check_id
    LEFT JOIN ap_invoices_all aia ON aida.invoice_id = aia.invoice_id AND aia.invoice_id = aipa.invoice_id AND aia.vendor_id = aps.vendor_id(+)
    LEFT JOIN poz_suppliers_v aps ON aia.vendor_id = aps.vendor_id(+)
    LEFT JOIN po_distributions_all pda ON aida.po_distribution_id = pda.po_distribution_id(+)
    LEFT JOIN po_headers_all pha ON pda.po_header_id = pha.po_header_id(+)
    WHERE 
      xah.gl_transfer_status_code = 'Y' 
      AND gjh.je_source = 'Payables' 
      AND gjh.status = 'P' 
      AND gjh.actual_flag = 'A'
) 
GROUP BY 
  company, 
  initiative, 
  cost_center, 
  ACCOUNT, 
  office, 
  trader, 
  future_1, 
  period_name, 
  description, 
  je_source, 
  je_category, 
  NAME, 
  vendor_name, 
  chk_num, 
  segment1, 
  currency_code, 
  accounted_currency, 
  source_id, 
  ae_line_num



-----------------------

select 
  company, 
  initiative, 
  cost_center, 
  ACCOUNT, 
  office, 
  trader, 
  future_1, 
  period_name "GL Period Name", 
  description, 
  je_source "SysDesc", 
  je_category "Category", 
  NAME "Batch", 
  vendor_name "Vendor Name/Customer Name", 
  chk_num "Invoice Number", 
  segment1 "Purchase Order Number", 
  NULL "Comments", 
  sum (unrounded_entered_dr) "Entered Debit", 
  sum(unrounded_entered_cr) "Entered Credit", 
  sum(ENT_DR_CR) "Entered Debit-Credit", 
  currency_code "Entered Currency", 
  SUM(unrounded_accounted_cr) "Accounted Credit", 
  SUM(unrounded_accounted_dr) "Accounted Debit", 
  sum(ACCT_DR_CR) "Accounted Debit-Credit", 
  accounted_currency, 
  source_id 
from 
  (
    SELECT 
      gcc.segment1 company, 
      gcc.segment2 initiative, 
      gcc.segment3 cost_center, 
      gcc.segment4 ACCOUNT, 
      gcc.segment5 office, 
      gcc.segment6 trader, 
      gcc.segment7 future_1, 
      gjh.period_name, 
      xal.description description, 
      gjh.je_source, 
      gjh.je_category, 
      gjb.NAME, 
      aps.vendor_name, 
      to_char(aca.check_number) chk_num, 
      pha.segment1, 
      xdl.unrounded_entered_dr, 
      xdl.unrounded_entered_cr, 
      NVL (xdl.unrounded_entered_dr, 0) - NVL (xdl.unrounded_entered_cr, 0) ENT_DR_CR, 
      xal.currency_code, 
      xdl.unrounded_accounted_cr, 
      xdl.unrounded_accounted_dr, 
      (
        NVL (xdl.unrounded_accounted_dr, 0) - NVL (xdl.unrounded_accounted_cr, 0)
      ) ACCT_DR_CR, 
      gl.currency_code accounted_currency, 
      xte.source_id_int_1 source_id, 
      xal.ae_line_num 
    FROM 
      gl_je_headers gjh, 
      gl_je_lines gjl, 
      gl_code_combinations gcc, 
      gl_je_batches gjb, 
      gl_ledgers gl, 
      gl_import_references gir, 
      -- XLA Tables
      xla_events xev, 
      xla_ae_headers xah, 
      xla_ae_lines xal, 
      xla_transaction_entities xte, 
      XLA_DISTRIBUTION_LINKS xdl, ---starting point
      AP_PAYMENT_HIST_DISTS aphd, 
      ap_invoices_All aia, 
      poz_suppliers_v aps, 
      ap_checks_all aca, 
      AP_INVOICE_PAYMENTS_ALL aipa, 
      ap_invoice_distributions_all aida, 
      po_distributions_all pda, 
      po_headers_all pha 
    WHERE 
      1 = 1 
      AND gjl.je_header_id = gjh.je_header_id 
      AND gcc.code_combination_id = gjl.code_combination_id 
      AND gjb.je_batch_id = gjh.je_batch_id 
      AND gl.ledger_id = gjh.ledger_id 
      AND gjh.je_header_id = gir.je_header_id 
      AND gjl.je_header_id = gir.je_header_id 
      AND gir.je_line_num = gjl.je_line_num 
      AND xal.gl_sl_link_id = gir.gl_sl_link_id 
      AND xah.gl_transfer_status_code = 'Y' 
      AND xev.entity_id = xte.entity_id 
      AND xah.entity_id = xte.entity_id 
      AND xah.event_id = xev.event_id 
      AND xah.ae_header_id = xal.ae_header_id 
      AND aca.check_id = xte.source_id_int_1 
      and xdl.ae_header_id = xah.ae_header_id 
      and xdl.ae_line_num = xal.ae_line_num 
      and xdl.event_id = xev.event_id 
      and aphd.payment_hist_dist_id = xdl.source_distribution_id_num_1 
      and aida.invoice_distribution_id = aphd.invoice_distribution_id 
      and aipa.invoice_payment_id = aphd.invoice_payment_id 
      and aipa.invoice_id = aia.invoice_id 
      and aipa.check_id = aca.check_id 
      AND aia.vendor_id = aps.vendor_id(+) 
      AND gjh.je_source = 'Payables' 
      AND gjh.status = 'P' 
      AND gjh.actual_flag = 'A' 
      and aida.invoice_id = aia.invoice_id 
      AND aida.po_distribution_id = pda.po_distribution_id(+) 
      AND pda.po_header_id = pha.po_header_id(+) --and gjh.period_name             = 'Dec-18'
      --and gcc.segment4                = '15020'
  ) 
group by 
  company, 
  initiative, 
  cost_center, 
  ACCOUNT, 
  office, 
  trader, 
  future_1, 
  period_name, 
  description, 
  je_source, 
  je_category, 
  NAME, 
  vendor_name, 
  chk_num, 
  segment1, 
  currency_code, 
  accounted_currency, 
  source_id, 
  ae_line_num



---------------------------

WITH CODE_JE_LINES AS (
    SELECT
        gcc.code_combination_id,
        gcc.segment3,
        gcc.segment6,
        c.accounted_cr,
        c.accounted_dr,
        c.je_line_num,
        c.je_header_id,
        c.status AS line_status
    FROM
        gl_code_combinations gcc
        JOIN GL_JE_LINES c ON gcc.code_combination_id = c.code_combination_id
),
GAAP_DATA AS (
    SELECT
        cj.segment3 AS GAAP_ACCOUNT,
        cj.segment6 AS segment,
        cj.accounted_cr AS GAAP_CREDIT,
        cj.accounted_dr AS GAAP_DEBITS,
        b.name AS Journal_name,
        cj.je_line_num AS GAAP_LINE_NUM,
        b.je_source AS source,
        b.je_header_id AS header_id,
        b.parent_je_header_id AS parent_header,
        cj.line_status AS line_status,
        b.status AS header_status
    FROM
        CODE_JE_LINES cj
        JOIN GL_JE_HEADERS b ON cj.je_header_id = b.je_header_id
        JOIN GL_LEDGERS gll ON b.ledger_id = gll.ledger_id(+)
    WHERE
        gll.name LIKE '%GAAP%'
),
FERC_DATA AS (
    SELECT
        cj.segment3 AS FERC_ACCOUNT,
        cj.segment6 AS segment,
        cj.accounted_cr AS FERC_CREDIT,
        cj.accounted_dr AS FERC_DEBITS,
        b.name AS Journal_name,
        cj.je_line_num AS FERC_LINE_NUM,
        b.je_source AS source,
        b.je_header_id AS header_id,
        b.parent_je_header_id AS parent_header,
        cj.line_status AS line_status,
        b.status AS header_status
    FROM
        CODE_JE_LINES cj
        JOIN GL_JE_HEADERS b ON cj.je_header_id = b.je_header_id
        JOIN GL_LEDGERS gll ON b.ledger_id = gll.ledger_id(+)
    WHERE
        gll.name LIKE '%FERC%'
)
SELECT
    -- your select clause here, which can include columns from GAAP_DATA and FERC_DATA
FROM
    FERC_DATA
    LEFT JOIN GAAP_DATA ON
        FERC_DATA.FERC_LINE_NUM = GAAP_DATA.GAAP_LINE_NUM(+)
        AND FERC_DATA.parent_header = GAAP_DATA.header_id(+)
WHERE
    NVL(GAAP_DATA.source, FERC_DATA.source) NOT IN ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
    AND FERC_DATA.line_status = 'P'
ORDER BY
    Transaction_idg;




---------

with filter_table as (
    select 
    gcc.segment3 AS GAAP_ACCOUNT, 
          gcc.segment6 AS segment, 
          c.accounted_cr AS GAAP_CREDIT, 
          c.accounted_dr AS GAAP_DEBITS, 
          c.je_line_num as GAAP_LINE_NUM,
          c.status as line_status,
          c.je_header_id
          from 
          gl_code_combinations gcc, 
          GL_JE_LINES c
          where 
          gcc.code_combination_id = c.code_combination_id
          and c.status = 'P'
),
SELECT 
          f.GAAP_ACCOUNT,
          f.segment,  
          f.GAAP_CREDIT, 
          f.GAAP_DEBITS,  
          B.name as Journal_name,
          f.GAAP_LINE_NUM,
          b.je_source as source,
          b.je_header_id as header_id,
          b.parent_je_header_id as parent_header,
          f.line_status,
          b.status as header_status 
        FROM 
          filter_table f,
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 1=1
          AND f.je_header_id = b.je_header_id 
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%GAAP%'



------------------- Change from previous query ---------
-- Union 1: a.	FERC data should be driving. So, please use outer-join.  
-- Union 3 – FERC data (FERC only and GAAP tied data)
-- Only distinct Journal Name between union
-- Used PARENT_JE_HEADER_ID in union 2 to get the FERC side.
-- Added Segment6 as project_code
-- Added filter on status = posted
-- Removed PJC tables and replaced Transaction id with XDA column.
------------------------------------------------------------

SELECT 
  which, 
  concat(nvl(concat('GAAP: ',GAAP_SEGEMNT),''),
  nvl(concat('  FERC: ',FERC_SEGEMNT),''))as Project_Code,
  TRANSACTION_IDG, 
  nvl(Journal_name, ferc) as Journal_name, 
  source,
  GAAP_ACCOUNT, 
  FERC_ACCOUNT, 
  GAAP_CREDIT, 
  GAAP_DEBITS, 
  FERC_CREDIT, 
  FERC_DEBITS,
  gaap_event_id,
  gaap_line_num,
  ferc_event_id,
  ferc_line_num
--   line_status,
--   header_status 
from 
  (
    SELECT 
      'FERC at PPM(Transaction)' as which,
      GAAP_DATA.segment as GAAP_SEGEMNT,
      FERC_DATA.segment as FERC_SEGEMNT,
      GAAP_DATA.TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc, 
      nvl(GAAP_DATA.source, FERC_DATA.source) as source,
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      GAAP_DATA.event_id as gaap_event_id,
      GAAP_DATA.ae_line_num as gaap_line_num,
      GAAP_DATA.event_id as ferc_event_id,
      FERC_DATA.ae_line_num as ferc_line_num,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status
    FROM 
      (
        SELECT 
          xda.source_distribution_id_num_1 AS TRANSACTION_IDG, 
          gcc.segment3 AS GAAP_ACCOUNT, 
          gcc.segment6 AS segment, 
          c.accounted_cr AS GAAP_CREDIT, 
          c.accounted_dr AS GAAP_DEBITS, 
          xda.event_id as event_id, 
          xda.ae_line_num as ae_line_num, 
          B.name as Journal_name,
          b.je_source as source,
          c.status as line_status,
          b.status as header_status  
        FROM 
          xla_distribution_links XDA, 
          xla_ae_lines XAL, 
          gl_code_combinations gcc, 
          gl_import_references gir, 
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 
          
		  XDA.ae_header_id = XAL.ae_header_id 
          AND XDA.ae_line_num = XAL.ae_line_num 
          and XAL.GL_SL_LINK_ID = gir.GL_SL_LINK_ID(+) 
          and xal.GL_SL_LINK_TABLE = gir.GL_SL_LINK_TABLE(+) ----
          and gir.JE_HEADER_ID = c.JE_HEADER_ID(+) 
          AND XAL.code_combination_id = gcc.code_combination_id 
          AND gcc.code_combination_id = c.code_combination_id (+) 
          AND c.je_header_id = b.je_header_id  
          AND B.LEDGER_ID = gll.LEDGER_ID (+) --             AND peia.expenditure_item_id = 31005
          --             AND B.name = '21-03-2024 Miscellaneous Cost'
          AND gll.name LIKE '%GAAP%'
--           and c.status = 'P'
      ) GAAP_DATA, 
      (
        SELECT 
          xda.source_distribution_id_num_1 AS TRANSACTION_IDG,  
          gcc.segment3 AS FERC_ACCOUNT, 
          gcc.segment6 AS segment, 
          c.accounted_cr AS FERC_CREDIT, 
          c.accounted_dr AS FERC_DEBITS, 
          xda.event_id as event_id, 
          xda.ae_line_num as ae_line_num, 
          B.name as Journal_name,
          b.je_source as source ,
          c.status as line_status,
          b.status as header_status 
        FROM  
          xla_distribution_links XDA, 
          xla_ae_lines XAL, 
          gl_code_combinations gcc, 
          gl_import_references gir, 
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 
		XDA.ae_header_id = XAL.ae_header_id 
          AND XDA.ae_line_num = XAL.ae_line_num 
          and XAL.GL_SL_LINK_ID = gir.GL_SL_LINK_ID(+) 
          and xal.GL_SL_LINK_TABLE = gir.GL_SL_LINK_TABLE(+) ----
          and gir.JE_HEADER_ID = b.JE_HEADER_ID(+) 
          AND XAL.code_combination_id = gcc.code_combination_id 
          AND gcc.code_combination_id = c.code_combination_id (+) 
          AND B.je_header_id = c.je_header_id 
          AND B.LEDGER_ID = gll.LEDGER_ID (+) --             AND peia.expenditure_item_id = 31004
          --             AND B.name = '21-03-2024 Miscellaneous Cost'
          AND gll.name LIKE '%FERC%'
      ) FERC_DATA 
    where 
      FERC_DATA.TRANSACTION_IDG = GAAP_DATA.TRANSACTION_IDG(+) 
      and FERC_DATA.event_id = GAAP_DATA.event_id(+) 
      and FERC_DATA.ae_line_num = GAAP_DATA.ae_line_num(+) 
      and FERC_DATA.Journal_name = GAAP_DATA.Journal_name(+) --     and GAAP_DATA.TRANSACTION_IDG = 31004
      --     AND GAAP_DATA.Journal_name = '21-03-2024 Miscellaneous Cost'
      --     ORDER BY
      --     TRANSACTION_IDG, GAAP_ACCOUNT, FERC_ACCOUNT
    union 
    SELECT 
      Case when GAAP_DATA.GAAP_ACCOUNT is null then 'Only FERC' else 'FERC Ledger data in GL (linked GAAP accounts)' end as which, 
      GAAP_DATA.segment as GAAP_SEGEMNT,
      FERC_DATA.segment as FERC_SEGEMNT,
      null as TRANSACTION_IDG, 
      GAAP_DATA.Journal_name, 
      FERC_DATA.Journal_name as ferc,
      nvl(GAAP_DATA.source, FERC_DATA.source) as source, 
      GAAP_DATA.GAAP_ACCOUNT, 
      FERC_DATA.FERC_ACCOUNT, 
      GAAP_DATA.GAAP_CREDIT, 
      GAAP_DATA.GAAP_DEBITS, 
      FERC_DATA.FERC_CREDIT, 
      FERC_DATA.FERC_DEBITS,
      null as gaap_event_id,
      GAAP_DATA.GAAP_LINE_NUM as gaap_line_num,
      null as ferc_event_id,
      FERC_DATA.FERC_LINE_NUM as ferc_line_num
      ,
      nvl(GAAP_DATA.line_status, FERC_DATA.line_status)  as line_status,
      nvl(GAAP_DATA.header_status, FERC_DATA.header_status) as header_status 
    FROM 
      (
        SELECT 
          gcc.segment3 AS GAAP_ACCOUNT, 
          gcc.segment6 AS segment, 
          c.accounted_cr AS GAAP_CREDIT, 
          c.accounted_dr AS GAAP_DEBITS, 
          B.name as Journal_name ,
          c.je_line_num as GAAP_LINE_NUM,
          b.je_source as source,
          b.je_header_id as header_id,
          b.parent_je_header_id as parent_header,
          c.status as line_status,
          b.status as header_status 
        FROM  
          gl_code_combinations gcc, 
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 1=1
          and gcc.code_combination_id = c.code_combination_id 
          AND c.je_header_id = b.je_header_id  
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%GAAP%'
      ) GAAP_DATA, 
      (
        SELECT 
          gcc.segment3 AS FERC_ACCOUNT,
          gcc.segment6 AS segment,  
          c.accounted_cr AS FERC_CREDIT, 
          c.accounted_dr AS FERC_DEBITS,  
          B.name as Journal_name,
          c.je_line_num as FERC_LINE_NUM,
          b.je_source as source,
          b.je_header_id as header_id,
          b.parent_je_header_id as parent_header,
          c.status as line_status,
          b.status as header_status 
        FROM 
          gl_code_combinations gcc,  
          GL_JE_LINES c, 
          GL_JE_HEADERS B, 
          GL_LEDGERS gll 
        WHERE 1=1
          and gcc.code_combination_id = c.code_combination_id
          AND c.je_header_id = b.je_header_id 
          AND B.LEDGER_ID = gll.LEDGER_ID (+)
          AND gll.name LIKE '%FERC%'
--           and gcc.segment3 = '234001'
--           and B.name = 'GL-FUT-014-J2'
      ) FERC_DATA 
    where  
--       FERC_DATA.Journal_name = GAAP_DATA.Journal_name(+)
      FERC_DATA.FERC_LINE_NUM = GAAP_DATA.GAAP_LINE_NUM(+)
      and FERC_DATA.parent_header = GAAP_DATA.header_id(+)
      and nvl(GAAP_DATA.source, FERC_DATA.source) not in ('Payables', 'Receivables', 'Receipt Accounting', 'projects', 'Project Accounting')
            --and (FERC_DATA.Journal_name = 'GL-FUT-014-J2') --     and gjh.name = '22-03-2024 Miscellaneous Cost'
      )  
where 
  1 = 1 
--   and which = 'FERC at PPM(Transaction)' 
  and Line_status = 'P'
--   and TRANSACTION_IDG = '33000'
--   AND (
--     Journal_name ='01-03-2024 Miscellaneous Cost' --'Case 4 Test 03-2132 CIP Category Change'
--   ) --     'CASE 2 FUT TEST-2132 P`OWERPLAN'

order by Transaction_idg
  ;

----==========================================

SELECT PROGRAM_ID,
       PROGRAM_NAME,
       PROGRAM_NUMBER,
       STATUS,
       DESCRIPTION,
       ASSESSMENT,
       BUDGET,
       PRIORITY,
       OWNING_ORGANIZATION,
       LINE_OF_BUSINESS,
       REGION,
       STRATEGY,
       OBJECTIVE,
       PROGRAM_MEMBER
FROM (
    SELECT PROGRAM_ID,
           PROGRAM_NAME,
           PROGRAM_NUMBER,
           STATUS,
           DESCRIPTION,
           ASSESSMENT,
           BUDGET,
           PRIORITY,
           OWNING_ORGANIZATION,
           LINE_OF_BUSINESS,
           last_update_date,
           creation_date,
           REGION,
           STRATEGY,
           OBJECTIVE,
           PROGRAM_MEMBER,
           ROW_NUMBER() OVER (ORDER BY creation_date DESC) AS row_seq
    FROM (
        SELECT DISTINCT 
               ppdb.PROGRAM_ID,
               ppdt.PROGRAM_NAME,
               ppdb.PROGRAM_NUMBER,
               ppdb.last_update_date,
               ppdb.creation_date,
               (SELECT fl.MEANING 
                FROM FND_LOOKUPS fl 
                WHERE fl.LOOKUP_CODE = ppdb.PROGRAM_SYSTEM_STATUS_CODE) AS STATUS,
               ppdt.PROGRAM_DESC AS DESCRIPTION,
               (SELECT fl.MEANING 
                FROM FND_LOOKUPS fl 
                WHERE fl.LOOKUP_CODE = ppdb.ASSESSMENT_CODE) AS ASSESSMENT,
               ppdb.PROGRAM_BUDGET AS BUDGET,
               (SELECT fl.MEANING 
                FROM FND_LOOKUPS fl 
                WHERE fl.LOOKUP_CODE = ppdb.PRIORITY_CODE) AS PRIORITY,
               (SELECT NAME 
                FROM HR_ALL_ORGANIZATION_UNITS_X haou
                WHERE ppdb.OWNING_ORGANIZATION_ID = haou.ORGANIZATION_ID) AS OWNING_ORGANIZATION,
               (SELECT fl.MEANING 
                FROM FND_LOOKUPS fl 
                WHERE fl.LOOKUP_CODE = ppdb.LOB_CODE) AS LINE_OF_BUSINESS,
               (SELECT fl.MEANING 
                FROM FND_LOOKUPS fl 
                WHERE fl.LOOKUP_CODE = ppdb.REGION_CODE) AS REGION,
               (SELECT fl.MEANING 
                FROM FND_LOOKUPS fl 
                WHERE fl.LOOKUP_CODE = ppdb.STRATEGY_CODE) AS STRATEGY,
               ppdt.PROGRAM_OBJECTIVE AS OBJECTIVE,
               perperson.FULL_NAME AS PROGRAM_MEMBER
        FROM PJS_PROGRAM_DEFN_B ppdb
        JOIN PJS_PROGRAM_DEFN_TL ppdt ON ppdb.PROGRAM_ID = ppdt.PROGRAM_ID
        LEFT JOIN PJS_PROGRAM_STAKEHOLDERS ppst ON ppdb.PROGRAM_ID = ppst.PROGRAM_ID
        LEFT JOIN PER_PERSON_NAMES_F_V perperson ON ppst.PERSON_ID = perperson.PERSON_ID
        WHERE ppst.ACCESS_TYPE_CODE = 'ORA_PJS_OWNER'
          AND ppst.ASSIGNMENT_CATEGORY_CODE = 'ORA_PJS_DIRECT'
          AND ppdb.last_update_date >= (CASE WHEN :IS_FULL_EXTRACT = 'N' THEN SYSDATE - 3 ELSE ppdb.last_update_date END)
        ORDER BY ppdb.creation_date DESC
    ) A
) X
WHERE row_seq BETWEEN :START_SEQ AND :END_SEQ;


----------------------
CIHOME=/usr/bin 
SBUCKET=$1
DBUCKET=$2
NAMESPACE=$3
YEAR=$(date | awk '{print $6}')
MONTH=$(date | awk '{print $2}')
DAY=$(date | awk '{print $3}')
TIME=$(date | awk '{print $4" "$5}'| sed 's/:/-/g')
FOLDER_NAME=$4
FILE_FILTER=$5

# object store list to find the file
cd $OCIHOME
oci os object list --bucket-name $SBUCKET --auth instance_principal --all | grep name | awk '{ print $2 }' | sed 's/"//g' | sed 's/,//g' > /tmp/cfs_oos_copy_file.list
# copy file to Archive Bucket 
if [ -z "$FOLDER_NAME" ]
then
	echo "IN FIRST"
    for filename in `cat /tmp/cfs_oos_copy_file.list` 
        do oci os object copy --bucket-name $SBUCKET --source-object-name $filename --destination-namespace $NAMESPACE --destination-bucket $DBUCKET --destination-object-name "$YEAR/$MONTH/$DAY/$TIME/$filename" --auth instance_principal 
        #do echo "$filename"
		done
	# delete file from ODI Bucket
	oci os object bulk-delete --namespace $NAMESPACE --bucket-name $SBUCKET --auth instance_principal --force
else
	echo "IN ELSE"
	for filename in `cat /tmp/cfs_oos_copy_file.list`
		do 
		if [[ "$filename" == *"$FILE_FILTER"* ]];
		then
			oci os object copy --bucket-name $SBUCKET --source-object-name $filename --destination-namespace $NAMESPACE --destination-bucket $DBUCKET --destination-object-name "$FOLDER_NAME/$YEAR/$MONTH/$DAY/$TIME/$filename" --auth instance_principal 
        #do echo "$filename"
		fi
	done
	# delete file from ODI Bucket
	oci os object bulk-delete --namespace $NAMESPACE --bucket-name $SBUCKET --auth instance_principal --force --include *$FILE_FILTER*
fi

------------------------------------
#!/bin/bash

# Ensure file_suffix is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <file_suffix>"
    exit 1
fi

file_suffix=$1
now=$(date +%Y-%m-%d-%s)

# Extract and decode the reportBytes element
trap_res=$(grep -i '<reportBytes>' /home/oracle/efs_data/projectstatushistory/output/response_project_status_history.xml | awk -F '<reportBytes>|</reportBytes>' '{print $2}' | base64 --decode)

# Append the decoded result to the CSV file
echo "$trap_res" >> /home/oracle/efs_data/projectstatushistory/logs/project_status_history_$file_suffix.csv


-------
file_suffix=$1
now=`date +%Y-%m-%d-%s`
trap_res=`cat /home/oracle/efs_data/projectstatushistory/output/response_project_status_history.xml | grep -i reportbytes | awk -F '<reportBytes>' '{printf $2}' | awk -F '</reportBytes>' '{printf $1}' | base64 --decode`
echo "$trap_res" >>/home/oracle/efs_data/projectstatushistory/logs/project_status_history_$file_suffix.csv


----------------
logs_path = /home/oracle/efs_data/projectstatushistory/logs
rm -rf $logs_path/*

---------------------
Caused by: Sql = select  PWD_1.PASSWORD  PASSWORD
from /home/oracle/efs_data/efs_erp_bicc_pwd PWD_1
/*$$SNPS_START_KEYSNP$CRDWG_TABLESNP$CRTABLE_NAME=pwdSNP$CRLOAD_FILE=/home/oracle/efs_data/efs_erp_bicc_pwdSNP$CRFILE_FORMAT=DSNP$CRFILE_SEP_FIELD=0x002cSNP$CRFILE_SEP_LINE=0x000ASNP$CRFILE_FIRST_ROW=0SNP$CRFILE_ENC_FIELD=SNP$CRFILE_DEC_SEP=SNP$CRSNP$CRDWG_COLSNP$CRCOL_NAME=PASSWORDSNP$CRTYPE_NAME=STRINGSNP$CRORDER=1SNP$CRLENGTH=200SNP$CRPRECISION=200SNP$CRACTION_ON_ERROR=NULLSNP$CR$$SNPS_END_KEY*/  
, Error Msg = java.sql.SQLException: ODI-40400: Invalid format description

---------------
import com.sunopsis.dwg.DwgObject
import oracle.odi.core.OdiInstance;
import oracle.odi.domain.project.OdiVariable;
import oracle.odi.domain.project.finder.*;
import oracle.odi.domain.runtime.variable.OdiVariableValue;
import oracle.odi.domain.runtime.variable.finder.*;
import java.sql.*;
import oracle.odi.domain.project.OdiProject;
import oracle.odi.core.persistence.transaction.support.DefaultTransactionDefinition;
import oracle.odi.domain.xrefs.expression.*;
import oracle.odi.languages.support.*;

OdiInstance odiInstance = odiRef.getOdiInstance();
//throw new Exception("got instance")
txnDef = new DefaultTransactionDefinition(); 
//throw new Exception("got txn def")

tm = odiInstance.getTransactionManager();
tme = odiInstance.getTransactionalEntityManager(); 
txnStatus=tm.getTransaction(txnDef)
//decpw- DwgObject.snpsDecypher (#PASS, odiInstance): 
decpw= DwgObject.snpsDecypher(#PASS, odiInstance);
File f= new File('/home/oracle/efs_data/efs_erp_bicc_pwd') 
f.write(decpw)






_------------


import com.sunopsis.dwg.DwgObject
import oracle.odi.core.OdiInstance
import oracle.odi.domain.project.OdiVariable
import oracle.odi.domain.project.finder.*
import oracle.odi.domain.runtime.variable.OdiVariableValue
import oracle.odi.domain.runtime.variable.finder.*
import java.sql.*
import oracle.odi.domain.project.OdiProject
import oracle.odi.core.persistence.transaction.support.DefaultTransactionDefinition
import oracle.odi.domain.xrefs.expression.*
import oracle.odi.languages.support.*

try {
    // Get ODI instance
    OdiInstance odiInstance = odiRef.getOdiInstance()
    if (odiInstance == null) {
        throw new Exception("ODI instance is null")
    }
    println "ODI instance obtained successfully"

    // Define transaction
    txnDef = new DefaultTransactionDefinition()
    if (txnDef == null) {
        throw new Exception("Transaction definition is null")
    }
    println "Transaction definition created successfully"

    // Get transaction manager
    tm = odiInstance.getTransactionManager()
    if (tm == null) {
        throw new Exception("Transaction manager is null")
    }
    println "Transaction manager obtained successfully"

    // Get entity manager
    tme = odiInstance.getTransactionalEntityManager()
    if (tme == null) {
        throw new Exception("Transactional entity manager is null")
    }
    println "Transactional entity manager obtained successfully"

    // Begin transaction
    txnStatus = tm.getTransaction(txnDef)
    if (txnStatus == null) {
        throw new Exception("Transaction status is null")
    }
    println "Transaction started successfully"

    // Decrypt password
    decpw = DwgObject.snpsDecypher("#PASS", odiInstance)
    if (decpw == null) {
        throw new Exception("Decrypted password is null")
    }
    println "Password decrypted successfully"

    // Write decrypted password to file
    File f = new File('/home/oracle/efs_data/efs_erp_bicc_pwd')
    f.write(decpw)
    println "Password written to file successfully"

    // Commit transaction
    tm.commit(txnStatus)
    println "Transaction committed successfully"
} catch (Exception e) {
    // Rollback transaction in case of error
    if (txnStatus != null && !txnStatus.isCompleted()) {
        tm.rollback(txnStatus)
    }
    // Log the exception or handle it as necessary
    println "Error: " + e.message
}

------------------------------------

ODI-1226: Step PRC_DECRYPT_ERP_PWD fails after 1 attempt(s).
ODI-1232: Procedure PRC_DECRYPT_ERP_PWD execution fails.
Caused By: java.lang.IllegalStateException: Can't overwrite cause with org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
Script23.groovy: 52: unexpected token: 1 @ line 52, column 38.
       decpw = DwgObject.snpsDecypher(""1cl2mXXvo603SiklJRAT+9iTfevj0HsD5TDYKQ3wqHE="", odiInstance)
                                        ^
